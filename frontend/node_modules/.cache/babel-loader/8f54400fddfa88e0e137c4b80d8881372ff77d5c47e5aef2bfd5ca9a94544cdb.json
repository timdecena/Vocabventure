{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jake\\\\Desktop\\\\VocabVenture\\\\Vocabventure\\\\frontend\\\\src\\\\components\\\\tutorial\\\\scenes\\\\DreamIntro.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { keyframes } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`;\nconst shake = keyframes`\n  0% { transform: translate(0, 0) rotate(0deg); }\n  25% { transform: translate(5px, 5px) rotate(1deg); }\n  50% { transform: translate(0, 0) rotate(0deg); }\n  75% { transform: translate(-5px, 5px) rotate(-1deg); }\n  100% { transform: translate(0, 0) rotate(0deg); }\n`;\nconst TextContainer = styled(Box)(({\n  theme\n}) => ({\n  textAlign: 'center',\n  animation: `${fadeIn} 2s ease-in`,\n  '&.shake': {\n    animation: `${shake} 0.5s ease-in-out`\n  }\n}));\n_c = TextContainer;\nconst AnimatedText = styled(Typography)(({\n  theme\n}) => ({\n  fontSize: '2.5rem',\n  fontWeight: 'bold',\n  color: '#fff',\n  textShadow: '0 0 10px rgba(255,255,255,0.5)',\n  marginBottom: theme.spacing(2)\n}));\n_c2 = AnimatedText;\nconst DreamIntro = ({\n  onComplete\n}) => {\n  _s();\n  const [text, setText] = useState('');\n  const [isShaking, setIsShaking] = useState(false);\n  const fullText = \"You are the chosen one... the prophecy has foretold...\";\n  useEffect(() => {\n    let currentIndex = 0;\n    const typingInterval = setInterval(() => {\n      if (currentIndex < fullText.length) {\n        setText(prev => prev + fullText[currentIndex]);\n        currentIndex++;\n      } else {\n        clearInterval(typingInterval);\n        // Trigger shake effect\n        setIsShaking(true);\n        // Audio playback temporarily disabled\n        // const audio = new Audio('/sounds/typing.mp3');\n        // audio.play().catch(() => {});\n\n        // Transition to next scene after effects\n        setTimeout(() => {\n          onComplete();\n        }, 2000);\n      }\n    }, 50);\n    return () => clearInterval(typingInterval);\n  }, [onComplete]);\n  return /*#__PURE__*/_jsxDEV(TextContainer, {\n    className: isShaking ? 'shake' : '',\n    children: /*#__PURE__*/_jsxDEV(AnimatedText, {\n      variant: \"h1\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(DreamIntro, \"DOpn/itL6gJAq+DxZG9j0g7H59o=\");\n_c3 = DreamIntro;\nexport default DreamIntro;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TextContainer\");\n$RefreshReg$(_c2, \"AnimatedText\");\n$RefreshReg$(_c3, \"DreamIntro\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","styled","keyframes","jsxDEV","_jsxDEV","fadeIn","shake","TextContainer","theme","textAlign","animation","_c","AnimatedText","fontSize","fontWeight","color","textShadow","marginBottom","spacing","_c2","DreamIntro","onComplete","_s","text","setText","isShaking","setIsShaking","fullText","currentIndex","typingInterval","setInterval","length","prev","clearInterval","setTimeout","className","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["C:/Users/Jake/Desktop/VocabVenture/Vocabventure/frontend/src/components/tutorial/scenes/DreamIntro.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Typography } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport { keyframes } from '@mui/system';\r\n\r\nconst fadeIn = keyframes`\r\n  from {\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst shake = keyframes`\r\n  0% { transform: translate(0, 0) rotate(0deg); }\r\n  25% { transform: translate(5px, 5px) rotate(1deg); }\r\n  50% { transform: translate(0, 0) rotate(0deg); }\r\n  75% { transform: translate(-5px, 5px) rotate(-1deg); }\r\n  100% { transform: translate(0, 0) rotate(0deg); }\r\n`;\r\n\r\nconst TextContainer = styled(Box)(({ theme }) => ({\r\n  textAlign: 'center',\r\n  animation: `${fadeIn} 2s ease-in`,\r\n  '&.shake': {\r\n    animation: `${shake} 0.5s ease-in-out`,\r\n  },\r\n}));\r\n\r\nconst AnimatedText = styled(Typography)(({ theme }) => ({\r\n  fontSize: '2.5rem',\r\n  fontWeight: 'bold',\r\n  color: '#fff',\r\n  textShadow: '0 0 10px rgba(255,255,255,0.5)',\r\n  marginBottom: theme.spacing(2),\r\n}));\r\n\r\nconst DreamIntro = ({ onComplete }) => {\r\n  const [text, setText] = useState('');\r\n  const [isShaking, setIsShaking] = useState(false);\r\n  const fullText = \"You are the chosen one... the prophecy has foretold...\";\r\n\r\n  useEffect(() => {\r\n    let currentIndex = 0;\r\n    const typingInterval = setInterval(() => {\r\n      if (currentIndex < fullText.length) {\r\n        setText(prev => prev + fullText[currentIndex]);\r\n        currentIndex++;\r\n      } else {\r\n        clearInterval(typingInterval);\r\n        // Trigger shake effect\r\n        setIsShaking(true);\r\n        // Audio playback temporarily disabled\r\n        // const audio = new Audio('/sounds/typing.mp3');\r\n        // audio.play().catch(() => {});\r\n        \r\n        // Transition to next scene after effects\r\n        setTimeout(() => {\r\n          onComplete();\r\n        }, 2000);\r\n      }\r\n    }, 50);\r\n\r\n    return () => clearInterval(typingInterval);\r\n  }, [onComplete]);\r\n\r\n  return (\r\n    <TextContainer className={isShaking ? 'shake' : ''}>\r\n      <AnimatedText variant=\"h1\">\r\n        {text}\r\n      </AnimatedText>\r\n    </TextContainer>\r\n  );\r\n};\r\n\r\nexport default DreamIntro; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,UAAU,QAAQ,eAAe;AAC/C,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,SAASC,SAAS,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGH,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMI,KAAK,GAAGJ,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMK,aAAa,GAAGN,MAAM,CAACF,GAAG,CAAC,CAAC,CAAC;EAAES;AAAM,CAAC,MAAM;EAChDC,SAAS,EAAE,QAAQ;EACnBC,SAAS,EAAE,GAAGL,MAAM,aAAa;EACjC,SAAS,EAAE;IACTK,SAAS,EAAE,GAAGJ,KAAK;EACrB;AACF,CAAC,CAAC,CAAC;AAACK,EAAA,GANEJ,aAAa;AAQnB,MAAMK,YAAY,GAAGX,MAAM,CAACD,UAAU,CAAC,CAAC,CAAC;EAAEQ;AAAM,CAAC,MAAM;EACtDK,QAAQ,EAAE,QAAQ;EAClBC,UAAU,EAAE,MAAM;EAClBC,KAAK,EAAE,MAAM;EACbC,UAAU,EAAE,gCAAgC;EAC5CC,YAAY,EAAET,KAAK,CAACU,OAAO,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC;AAACC,GAAA,GANEP,YAAY;AAQlB,MAAMQ,UAAU,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAAC4B,SAAS,EAAEC,YAAY,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM8B,QAAQ,GAAG,wDAAwD;EAEzE7B,SAAS,CAAC,MAAM;IACd,IAAI8B,YAAY,GAAG,CAAC;IACpB,MAAMC,cAAc,GAAGC,WAAW,CAAC,MAAM;MACvC,IAAIF,YAAY,GAAGD,QAAQ,CAACI,MAAM,EAAE;QAClCP,OAAO,CAACQ,IAAI,IAAIA,IAAI,GAAGL,QAAQ,CAACC,YAAY,CAAC,CAAC;QAC9CA,YAAY,EAAE;MAChB,CAAC,MAAM;QACLK,aAAa,CAACJ,cAAc,CAAC;QAC7B;QACAH,YAAY,CAAC,IAAI,CAAC;QAClB;QACA;QACA;;QAEA;QACAQ,UAAU,CAAC,MAAM;UACfb,UAAU,CAAC,CAAC;QACd,CAAC,EAAE,IAAI,CAAC;MACV;IACF,CAAC,EAAE,EAAE,CAAC;IAEN,OAAO,MAAMY,aAAa,CAACJ,cAAc,CAAC;EAC5C,CAAC,EAAE,CAACR,UAAU,CAAC,CAAC;EAEhB,oBACEjB,OAAA,CAACG,aAAa;IAAC4B,SAAS,EAAEV,SAAS,GAAG,OAAO,GAAG,EAAG;IAAAW,QAAA,eACjDhC,OAAA,CAACQ,YAAY;MAACyB,OAAO,EAAC,IAAI;MAAAD,QAAA,EACvBb;IAAI;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEpB,CAAC;AAACnB,EAAA,CApCIF,UAAU;AAAAsB,GAAA,GAAVtB,UAAU;AAsChB,eAAeA,UAAU;AAAC,IAAAT,EAAA,EAAAQ,GAAA,EAAAuB,GAAA;AAAAC,YAAA,CAAAhC,EAAA;AAAAgC,YAAA,CAAAxB,GAAA;AAAAwB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}