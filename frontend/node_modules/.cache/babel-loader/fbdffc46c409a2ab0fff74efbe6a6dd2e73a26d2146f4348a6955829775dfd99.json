{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jake\\\\Desktop\\\\VocabVenture\\\\Vocabventure\\\\frontend\\\\src\\\\pages\\\\Game\\\\JungleLushLevel2.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Typography, Button, Paper, Dialog, DialogActions, DialogContent } from '@mui/material';\nimport { styled, keyframes } from '@mui/material/styles';\nimport '../../styles/MapView.css';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst JUNGLE_BG = 'https://png.pngtree.com/background/20220727/original/pngtree-jungle-game-background-arcade-art-picture-image_1829537.jpg';\nconst WIZARD_IMG = 'https://www.shutterstock.com/image-vector/pixel-art-wizard-long-beard-260nw-2544146115.jpg';\nconst USER_IMG = 'https://w7.pngwing.com/pngs/928/303/png-transparent-pixel-dodgers-pixel-art-sprite-text-cartoon-fictional-character.png';\nconst TENSEPHANT_IMG = 'https://files.idyllic.app/files/static/2179601';\nconst TIMEGRUB_IMG = 'https://i.redd.it/fahn2okk3fy41.png';\nconst HEART_IMG = 'https://p7.hiclipart.com/preview/28/266/352/pixel-art-heart-8-bit-color-heart-thumbnail.jpg';\nconst bounce = keyframes`\n  0%, 100% { transform: translateY(0); }\n  50% { transform: translateY(-10px); }\n`;\nconst shake = keyframes`\n  0%, 100% { transform: translateX(0); }\n  25% { transform: translateX(-8px); }\n  75% { transform: translateX(8px); }\n`;\nconst hit = keyframes`\n  0% { transform: scale(1); }\n  25% { transform: scale(1.1); }\n  50% { transform: scale(0.9); }\n  75% { transform: scale(1.05); }\n  100% { transform: scale(1); }\n`;\nconst userFlash = keyframes`\n  0%, 100% { opacity: 1; filter: brightness(1); }\n  50% { opacity: 0.7; filter: brightness(1.2) sepia(1) saturate(10000%) hue-rotate(-50deg); }\n`;\nconst monsterFlash = keyframes`\n  0%, 100% { opacity: 1; filter: brightness(1); }\n  50% { opacity: 0.7; filter: brightness(1.2) sepia(1) saturate(10000%) hue-rotate(180deg); }\n`;\nconst SceneContainer = styled(Box)(({\n  theme\n}) => ({\n  width: '100%',\n  height: '100vh',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'flex-end',\n  backgroundImage: `url(${JUNGLE_BG})`,\n  backgroundSize: 'cover',\n  backgroundPosition: 'center',\n  position: 'relative',\n  overflow: 'hidden'\n}));\n_c = SceneContainer;\nconst Ground = styled(Box)(({\n  theme\n}) => ({\n  position: 'absolute',\n  left: 0,\n  bottom: '90px',\n  width: '100%',\n  height: '40px',\n  background: 'linear-gradient(to top, #3e2e1a 80%, rgba(62,46,26,0.2) 100%)',\n  zIndex: 2,\n  borderTopLeftRadius: '30px',\n  borderTopRightRadius: '30px',\n  boxShadow: '0 0 16px 2px rgba(0,0,0,0.25)'\n}));\n_c2 = Ground;\nconst SpritesRow = styled(Box)(({\n  theme\n}) => ({\n  width: '900px',\n  maxWidth: '90vw',\n  position: 'absolute',\n  left: '50%',\n  transform: 'translateX(-50%)',\n  bottom: '130px',\n  height: '160px',\n  zIndex: 3,\n  pointerEvents: 'none'\n}));\n_c3 = SpritesRow;\nconst WizardUserGroup = styled(Box)(({\n  theme\n}) => ({\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'flex-end',\n  gap: '24px'\n}));\n_c4 = WizardUserGroup;\nconst MonsterGroup = styled(Box)(({\n  theme\n}) => ({\n  position: 'absolute',\n  right: 0,\n  bottom: 0,\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'flex-end',\n  gap: '32px'\n}));\n_c5 = MonsterGroup;\nconst WizardSprite = styled('img')({\n  width: '120px',\n  height: 'auto',\n  filter: 'drop-shadow(0 8px 16px rgba(0,0,0,0.5))',\n  animation: `${bounce} 2.2s infinite`\n});\n_c6 = WizardSprite;\nconst UserSprite = styled('img')(({\n  isDamaged\n}) => ({\n  width: '100px',\n  height: 'auto',\n  filter: 'drop-shadow(0 8px 16px rgba(0,0,0,0.5))',\n  animation: `${bounce} 2s infinite, ${isDamaged ? `${shake} 0.5s ease-in-out, ${userFlash} 0.5s ease-in-out` : 'none'}`\n}));\n_c7 = UserSprite;\nconst MonsterSprite = styled('img')(({\n  isDamaged\n}) => ({\n  width: '140px',\n  height: 'auto',\n  filter: 'drop-shadow(0 8px 16px rgba(0,0,0,0.5))',\n  animation: `${bounce} 2.3s infinite, ${isDamaged ? `${hit} 0.5s ease-in-out, ${monsterFlash} 0.5s ease-in-out` : 'none'}`\n}));\n_c8 = MonsterSprite;\nconst FLESH_BROWN = '#e6c7b2';\nconst NAME_BG = '#d1a97a';\nconst DialogueBox = styled(Paper)(({\n  theme\n}) => ({\n  position: 'absolute',\n  left: '50%',\n  bottom: 0,\n  transform: 'translateX(-50%)',\n  width: '900px',\n  maxWidth: '90vw',\n  minWidth: '320px',\n  padding: theme.spacing(3, 4),\n  backgroundColor: FLESH_BROWN,\n  color: '#3a2a1a',\n  textAlign: 'left',\n  borderRadius: '18px 18px 0 0',\n  zIndex: 10,\n  boxShadow: '0 -2px 16px 2px rgba(0,0,0,0.18)',\n  border: '3px solid #b48a6e',\n  fontFamily: 'monospace',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'space-between',\n  boxSizing: 'border-box'\n}));\n_c9 = DialogueBox;\nconst NameTag = styled(Box)(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: '-22px',\n  left: '18px',\n  background: NAME_BG,\n  color: '#3a2a1a',\n  borderRadius: '16px',\n  padding: '4px 18px',\n  fontWeight: 700,\n  fontSize: '1.1rem',\n  boxShadow: '0 2px 8px #b48a6e44',\n  border: '2px solid #b48a6e',\n  fontFamily: 'monospace',\n  zIndex: 2\n}));\n_c10 = NameTag;\nconst ClickPrompt = styled(Box)(({\n  theme\n}) => ({\n  position: 'absolute',\n  bottom: '16px',\n  right: '32px',\n  color: '#00996b',\n  fontSize: '1.1rem',\n  fontWeight: 700,\n  opacity: 0.85,\n  pointerEvents: 'none',\n  zIndex: 5,\n  fontFamily: 'monospace'\n}));\n_c11 = ClickPrompt;\nconst HeartRow = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  gap: '8px',\n  position: 'absolute',\n  top: '24px',\n  left: '32px',\n  zIndex: 20\n}));\n_c12 = HeartRow;\nconst TimerBox = styled(Box)(({\n  theme\n}) => ({\n  background: '#fffbe6',\n  color: '#3a2a1a',\n  borderRadius: '12px',\n  padding: '6px 18px',\n  fontWeight: 700,\n  fontFamily: 'monospace',\n  fontSize: '1.2rem',\n  boxShadow: '0 2px 8px #b48a6e44',\n  border: '2px solid #b48a6e',\n  zIndex: 20,\n  marginLeft: 16\n}));\n_c13 = TimerBox;\nconst VS = styled(Box)(({\n  theme\n}) => ({\n  fontSize: '2.5rem',\n  fontWeight: 900,\n  color: '#fff',\n  textShadow: '0 2px 8px #000',\n  margin: '0 18px',\n  zIndex: 22,\n  pointerEvents: 'none'\n}));\n_c14 = VS;\nconst TopBar = styled(Box)(({\n  theme\n}) => ({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 30,\n  padding: '18px 32px'\n}));\n_c15 = TopBar;\nconst CenterBar = styled(Box)(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: 24,\n  left: '50%',\n  transform: 'translateX(-50%)',\n  zIndex: 30,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center'\n}));\nconst BattleSpritesRow = styled(Box)(({\n  theme\n}) => ({\n  width: '100%',\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'flex-end',\n  justifyContent: 'center',\n  marginBottom: '180px',\n  zIndex: 20,\n  pointerEvents: 'none',\n  minHeight: '220px',\n  position: 'relative'\n}));\n_c16 = BattleSpritesRow;\nconst MonsterSpriteWrapper = styled(Box)(({\n  theme\n}) => ({\n  position: 'relative',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'flex-end'\n}));\n_c17 = MonsterSpriteWrapper;\nconst BattleBottomBar = styled(Box)(({\n  theme\n}) => ({\n  width: '100vw',\n  background: 'rgba(122,62,46,0.97)',\n  minHeight: '100px',\n  padding: '38px 0 18px 0',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  zIndex: 30,\n  borderTopLeftRadius: '32px',\n  borderTopRightRadius: '32px',\n  boxShadow: '0 -2px 24px 2px rgba(0,0,0,0.32)',\n  position: 'absolute',\n  left: 0,\n  bottom: 0\n}));\n_c18 = BattleBottomBar;\nconst QuestionText = styled(Typography)(({\n  theme\n}) => ({\n  color: 'white',\n  fontWeight: 600,\n  fontSize: '1.35rem',\n  marginBottom: '22px',\n  textAlign: 'center',\n  textShadow: '0 2px 8px #000'\n}));\n_c19 = QuestionText;\nconst TIMER_DURATION = 30;\nconst MonsterHPBar = styled(Box)(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: '-30px',\n  left: '50%',\n  transform: 'translateX(-50%)',\n  width: '120px',\n  height: '12px',\n  backgroundColor: '#333',\n  borderRadius: '6px',\n  overflow: 'hidden',\n  border: '2px solid #fff',\n  boxShadow: '0 2px 4px rgba(0,0,0,0.3)'\n}));\n_c20 = MonsterHPBar;\nconst MonsterHPFill = styled(Box)(({\n  hp\n}) => ({\n  width: `${hp}%`,\n  height: '100%',\n  background: 'linear-gradient(90deg, #4caf50 60%, #b2ff59 100%)',\n  transition: 'width 0.4s'\n}));\n_c21 = MonsterHPFill;\nconst MonsterHPText = styled(Typography)(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: '-48px',\n  left: '50%',\n  transform: 'translateX(-50%)',\n  color: '#fff',\n  fontWeight: 700,\n  fontSize: '1rem',\n  textShadow: '0 2px 8px #000',\n  zIndex: 10\n}));\n_c22 = MonsterHPText;\nconst ChoicesGrid = styled(Box)(({\n  theme,\n  count\n}) => ({\n  width: count === 3 ? '520px' : '520px',\n  margin: '0 auto',\n  display: 'grid',\n  gridTemplateColumns: count === 3 ? '1fr 1fr 1fr' : '1fr 1fr',\n  gridTemplateRows: count === 3 ? '1fr' : '1fr 1fr',\n  gap: '18px',\n  justifyItems: 'stretch',\n  alignItems: 'stretch',\n  justifyContent: 'center'\n}));\n_c23 = ChoicesGrid;\nconst MoveButton = styled(Button)(({\n  selected\n}) => ({\n  width: '100%',\n  minHeight: '64px',\n  background: '#f8f8f8',\n  color: '#222',\n  fontFamily: 'monospace',\n  fontSize: '1.1rem',\n  border: selected ? '2.5px solid #d32f2f' : '2.5px solid #444',\n  borderRadius: '4px',\n  boxShadow: selected ? '0 0 0 2px #ffbdbd' : '0 0 0 2px #222',\n  outline: selected ? '2px solid #d32f2f' : 'none',\n  textAlign: 'center',\n  whiteSpace: 'normal',\n  wordBreak: 'break-word',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  padding: '8px 12px',\n  transition: 'border 0.1s, box-shadow 0.1s',\n  '&:hover': {\n    border: '2.5px solid #d32f2f',\n    boxShadow: '0 0 0 2px #ffbdbd',\n    background: '#fff3f3'\n  }\n}));\n_c24 = MoveButton;\nconst StarRow = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  justifyContent: 'center',\n  marginBottom: 10,\n  marginTop: -10\n}));\n_c25 = StarRow;\nconst Star = styled('span')(({\n  filled\n}) => ({\n  fontSize: '2.2rem',\n  color: filled ? '#FFD700' : '#bdbdbd',\n  filter: filled ? 'drop-shadow(0 2px 6px #b48a6e88)' : 'none',\n  margin: '0 4px',\n  transition: 'color 0.2s'\n}));\n\n// Dialogue sequence for Level 2\n_c26 = Star;\nconst dialogueSequence = [{\n  speaker: 'Wizard',\n  text: \"We've entered the edge of the jungle where time behaves… unusually.\"\n}, {\n  speaker: 'User',\n  text: \"It feels like everything is… stuck, or skipping forward?\"\n}, {\n  speaker: 'Wizard',\n  text: \"That is the influence of Tensaphant, the Tinkerer of Time. His distortions ripple through every sentence, every moment.\"\n}, {\n  speaker: 'Wizard',\n  text: \"Here, verbs bend out of shape. The past forgets itself. The future speaks in riddles. Be on guard.\"\n}, {\n  speaker: 'User',\n  text: \"So we're dealing with time grammar?\"\n}, {\n  speaker: 'Wizard',\n  text: \"Exactly. Master this, and you'll make the jungle breathe freely again.\"\n}, {\n  speaker: 'Tensaphant',\n  text: \"Foolish mortal... trudging through my warped domain.\"\n}, {\n  speaker: 'Tensaphant',\n  text: \"The villagers babble nonsense now, caught in echoes of incorrect tenses. I like it that way.\"\n}, {\n  speaker: 'User',\n  text: \"Then you won't like what comes next.\"\n}, {\n  speaker: 'Tensaphant',\n  text: \"Before you challenge me, face my echo from a fractured timeline.\"\n}, {\n  speaker: 'Timegrub',\n  text: \"Past, present, future... all blend in my belly!\"\n}, {\n  speaker: 'Timegrub',\n  text: \"Get the tense wrong, and I'll gnaw on your precious hearts!\"\n}, {\n  speaker: 'User',\n  text: \"You'll be burping grammar rules by the time I'm done.\"\n}];\n\n// Questions for Timegrub (3)\nconst timegrubQuestions = [{\n  question: 'Choose the correct sentence (past tense):',\n  options: ['She eats dinner already.', 'She ate dinner already.', 'She eat dinner already.'],\n  correctAnswer: 1\n}, {\n  question: 'Select the correct future tense:',\n  options: ['They will go to the museum tomorrow.', 'They goes to the museum tomorrow.', 'They going to the museum tomorrow.'],\n  correctAnswer: 0\n}, {\n  question: 'Choose the proper tense:',\n  options: ['He has finish his test.', 'He have finished his test.', 'He has finished his test.'],\n  correctAnswer: 2\n}];\n\n// Pre-Tensaphant battle dialogue\nconst preTensaphantDialogue = [{\n  speaker: 'Timegrub',\n  text: \"Urghh… the timeline... corrected… *faints\"\n}, {\n  speaker: 'Tensaphant',\n  text: \"You've disrupted my rhythm!\"\n}, {\n  speaker: 'User',\n  text: \"Then I'll break the rest of your clock!\"\n}, {\n  speaker: 'Tensaphant',\n  text: \"Let's see how well you handle me, time meddler!\"\n}];\n\n// Questions for Tensaphant (5)\nconst tensephantQuestions = [{\n  question: 'Which sentence is in the simple past tense?',\n  options: ['She has baked a cake.', 'She baked a cake.', 'She was baking a cake.'],\n  correctAnswer: 1\n}, {\n  question: 'Choose the correct future perfect tense:',\n  options: ['I will have finish my work before lunch.', 'I will have finished my work before lunch.', 'I had finished my work before lunch.'],\n  correctAnswer: 1\n}, {\n  question: 'Which sentence is in the past continuous tense?',\n  options: ['They were play outside.', 'They had been playing outside.', 'They were playing outside.'],\n  correctAnswer: 2\n}, {\n  question: 'Pick the correct present perfect continuous sentence:',\n  options: ['I have been studied all night.', 'I have been studying all night.', 'I was studying all night.'],\n  correctAnswer: 1\n}, {\n  question: 'Which one is in the future continuous tense?',\n  options: ['She will be sing at the event.', 'She will be singing at the event.', 'She is singing at the event tomorrow.'],\n  correctAnswer: 1\n}];\nconst MONSTER_MAX_HP = 100;\nconst VictoryOverlay = styled(Box)(({\n  theme\n}) => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100vw',\n  height: '100vh',\n  background: 'rgba(30, 20, 10, 0.55)',\n  zIndex: 1000,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center'\n}));\n_c27 = VictoryOverlay;\nconst VictoryContainer = styled(Paper)(({\n  theme\n}) => ({\n  minWidth: 380,\n  maxWidth: '90vw',\n  padding: '48px 36px 36px 36px',\n  borderRadius: 24,\n  background: '#fffbe6',\n  boxShadow: '0 8px 48px 8px #000a',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  zIndex: 1100,\n  border: '4px solid #b48a6e'\n}));\n_c28 = VictoryContainer;\nconst VictoryTitle = styled(Typography)(({\n  theme\n}) => ({\n  fontWeight: 900,\n  fontSize: '2.2rem',\n  color: '#00996b',\n  marginBottom: 18,\n  textShadow: '0 2px 8px #b48a6e44',\n  fontFamily: 'monospace',\n  textAlign: 'center'\n}));\n_c29 = VictoryTitle;\nconst VictoryButton = styled(Button)(({\n  theme\n}) => ({\n  fontWeight: 700,\n  fontFamily: 'monospace',\n  fontSize: '1.1rem',\n  borderRadius: 16,\n  margin: '12px 0',\n  minWidth: 180,\n  boxShadow: '0 2px 8px #b48a6e44'\n}));\n_c30 = VictoryButton;\nconst JungleLushLevel2 = () => {\n  _s();\n  const navigate = useNavigate();\n  // Dialogue and battle state\n  const [phase, setPhase] = useState('dialogue'); // dialogue, timegrub, pretense, tensephant, victory, gameover\n  const [dialogueIdx, setDialogueIdx] = useState(0);\n  const [preTenseDialogueIdx, setPreTenseDialogueIdx] = useState(0);\n  // Battle state\n  const [hearts, setHearts] = useState(3);\n  const [timeLeft, setTimeLeft] = useState(TIMER_DURATION);\n  const [monsterHP, setMonsterHP] = useState(MONSTER_MAX_HP);\n  const [monster, setMonster] = useState('timegrub'); // 'timegrub' or 'tensephant'\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [showResult, setShowResult] = useState(false);\n  const [userDamaged, setUserDamaged] = useState(false);\n  const [monsterDamaged, setMonsterDamaged] = useState(false);\n  const [victory, setVictory] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [showClickPrompt, setShowClickPrompt] = useState(false);\n  const [showQuit, setShowQuit] = useState(false);\n  const idleTimeout = useRef(null);\n\n  // Dialogue click/idle logic\n  useEffect(() => {\n    setShowClickPrompt(false);\n    if (idleTimeout.current) clearTimeout(idleTimeout.current);\n    if (phase === 'dialogue' || phase === 'pretense') {\n      idleTimeout.current = setTimeout(() => setShowClickPrompt(true), 2000);\n    }\n    return () => clearTimeout(idleTimeout.current);\n  }, [dialogueIdx, phase, preTenseDialogueIdx]);\n\n  // Timer logic\n  useEffect(() => {\n    if ((phase === 'timegrub' || phase === 'tensephant') && timeLeft > 0 && !victory && !gameOver) {\n      const timer = setInterval(() => setTimeLeft(t => t - 1), 1000);\n      return () => clearInterval(timer);\n    } else if ((phase === 'timegrub' || phase === 'tensephant') && timeLeft === 0 && !victory && !gameOver) {\n      // Decrease heart, reset timer or game over\n      if (hearts > 1) {\n        setHearts(h => h - 1);\n        setTimeLeft(TIMER_DURATION);\n        setSelectedAnswer(null);\n        setShowResult(false);\n      } else {\n        setHearts(0);\n        setGameOver(true);\n      }\n    }\n  }, [phase, timeLeft, victory, gameOver, hearts]);\n\n  // Dialogue click handler\n  const handleDialogueClick = () => {\n    setShowClickPrompt(false);\n    if (idleTimeout.current) clearTimeout(idleTimeout.current);\n    if (phase === 'dialogue') {\n      if (dialogueIdx < dialogueSequence.length - 1) {\n        setDialogueIdx(dialogueIdx + 1);\n      } else {\n        // Start Timegrub battle\n        setPhase('timegrub');\n        setMonster('timegrub');\n        setMonsterHP(MONSTER_MAX_HP);\n        setCurrentQuestion(0);\n        setTimeLeft(TIMER_DURATION);\n      }\n    } else if (phase === 'pretense') {\n      if (preTenseDialogueIdx < preTensaphantDialogue.length - 1) {\n        setPreTenseDialogueIdx(preTenseDialogueIdx + 1);\n      } else {\n        // Start Tensephant battle\n        setPhase('tensephant');\n        setMonster('tensephant');\n        setMonsterHP(MONSTER_MAX_HP);\n        setCurrentQuestion(0);\n        setTimeLeft(TIMER_DURATION);\n        setSelectedAnswer(null);\n        setShowResult(false);\n      }\n    }\n  };\n\n  // Answer handler\n  const handleAnswer = idx => {\n    setSelectedAnswer(idx);\n    setShowResult(true);\n    const questions = monster === 'timegrub' ? timegrubQuestions : tensephantQuestions;\n    if (idx === questions[currentQuestion].correctAnswer) {\n      setMonsterDamaged(true);\n      setTimeout(() => setMonsterDamaged(false), 500);\n      setMonsterHP(hp => {\n        const newHP = Math.max(0, hp - Math.floor(MONSTER_MAX_HP / questions.length));\n        if (currentQuestion === questions.length - 1 || newHP === 0) {\n          if (monster === 'timegrub') {\n            // Pre-Tensephant dialogue\n            setPhase('pretense');\n            setPreTenseDialogueIdx(0);\n          } else {\n            setVictory(true);\n          }\n        }\n        return newHP;\n      });\n      if (currentQuestion < questions.length - 1) {\n        setTimeout(() => {\n          setCurrentQuestion(prev => prev + 1);\n          setSelectedAnswer(null);\n          setShowResult(false);\n          setTimeLeft(TIMER_DURATION);\n        }, 600);\n      }\n    } else {\n      setUserDamaged(true);\n      setTimeout(() => setUserDamaged(false), 500);\n      if (hearts > 1) {\n        setTimeout(() => {\n          setHearts(h => h - 1);\n          setSelectedAnswer(null);\n          setShowResult(false);\n          setTimeLeft(TIMER_DURATION);\n        }, 600);\n      } else {\n        setTimeout(() => {\n          setHearts(0);\n          setGameOver(true);\n        }, 600);\n      }\n    }\n  };\n\n  // Retry handler\n  const handleRetryBattle = () => {\n    setHearts(3);\n    setTimeLeft(TIMER_DURATION);\n    setMonsterHP(MONSTER_MAX_HP);\n    setCurrentQuestion(0);\n    setSelectedAnswer(null);\n    setShowResult(false);\n    setGameOver(false);\n    setVictory(false);\n    // Only reset the current battle phase, not the whole level\n    if (phase === 'tensephant') {\n      setPhase('tensephant');\n      setMonster('tensephant');\n    } else {\n      setPhase('timegrub');\n      setMonster('timegrub');\n    }\n  };\n\n  // Render logic\n  let content = null;\n  if (phase === 'dialogue') {\n    const d = dialogueSequence[dialogueIdx];\n    content = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SpritesRow, {\n        children: [/*#__PURE__*/_jsxDEV(WizardUserGroup, {\n          children: [/*#__PURE__*/_jsxDEV(WizardSprite, {\n            src: WIZARD_IMG\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(UserSprite, {\n            src: USER_IMG\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MonsterGroup, {\n          children: [d.speaker === 'Tensaphant' && /*#__PURE__*/_jsxDEV(MonsterSprite, {\n            src: TENSEPHANT_IMG\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 44\n          }, this), d.speaker === 'Timegrub' && /*#__PURE__*/_jsxDEV(MonsterSprite, {\n            src: TIMEGRUB_IMG\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogueBox, {\n        elevation: 6,\n        onClick: handleDialogueClick,\n        style: {\n          cursor: 'pointer',\n          userSelect: 'none',\n          marginTop: 180\n        },\n        children: [/*#__PURE__*/_jsxDEV(NameTag, {\n          children: d.speaker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          style: {\n            marginTop: 18,\n            fontFamily: 'monospace'\n          },\n          children: d.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 11\n        }, this), showClickPrompt && /*#__PURE__*/_jsxDEV(ClickPrompt, {\n          children: \"Click to continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else if (phase === 'timegrub' || phase === 'tensephant') {\n    const questions = monster === 'timegrub' ? timegrubQuestions : tensephantQuestions;\n    const monsterImg = monster === 'timegrub' ? TIMEGRUB_IMG : TENSEPHANT_IMG;\n    const monsterName = monster === 'timegrub' ? 'Timegrub' : 'Tensaphant';\n    content = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(BattleSpritesRow, {\n        children: [/*#__PURE__*/_jsxDEV(UserSprite, {\n          src: USER_IMG,\n          isDamaged: userDamaged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(VS, {\n          children: \"VS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MonsterSpriteWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(MonsterHPText, {\n            children: [monsterName, \" HP\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MonsterHPBar, {\n            children: /*#__PURE__*/_jsxDEV(MonsterHPFill, {\n              hp: monsterHP\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 680,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MonsterSprite, {\n            src: monsterImg,\n            isDamaged: monsterDamaged\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BattleBottomBar, {\n        children: [/*#__PURE__*/_jsxDEV(QuestionText, {\n          children: questions[currentQuestion].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChoicesGrid, {\n          count: questions[currentQuestion].options.length,\n          children: questions[currentQuestion].options.map((option, idx) => /*#__PURE__*/_jsxDEV(MoveButton, {\n            selected: selectedAnswer === idx,\n            onClick: () => handleAnswer(idx),\n            disableRipple: true,\n            style: {\n              fontFamily: 'monospace'\n            },\n            disabled: showResult,\n            children: option\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else if (phase === 'pretense') {\n    const d = preTensaphantDialogue[preTenseDialogueIdx];\n    content = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SpritesRow, {\n        children: [/*#__PURE__*/_jsxDEV(WizardUserGroup, {\n          children: [/*#__PURE__*/_jsxDEV(WizardSprite, {\n            src: WIZARD_IMG\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(UserSprite, {\n            src: USER_IMG\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MonsterGroup, {\n          children: [d.speaker === 'Tensaphant' && /*#__PURE__*/_jsxDEV(MonsterSprite, {\n            src: TENSEPHANT_IMG\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 44\n          }, this), d.speaker === 'Timegrub' && /*#__PURE__*/_jsxDEV(MonsterSprite, {\n            src: TIMEGRUB_IMG\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 718,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogueBox, {\n        elevation: 6,\n        onClick: handleDialogueClick,\n        style: {\n          cursor: 'pointer',\n          userSelect: 'none',\n          marginTop: 180\n        },\n        children: [/*#__PURE__*/_jsxDEV(NameTag, {\n          children: d.speaker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          style: {\n            marginTop: 18,\n            fontFamily: 'monospace'\n          },\n          children: d.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 11\n        }, this), showClickPrompt && /*#__PURE__*/_jsxDEV(ClickPrompt, {\n          children: \"Click to continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(SceneContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Ground, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TopBar, {\n      children: [phase === 'timegrub' || phase === 'tensephant' ? /*#__PURE__*/_jsxDEV(HeartRow, {\n        children: [...Array(3)].map((_, idx) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: HEART_IMG,\n          alt: \"Heart\",\n          style: {\n            width: 40,\n            height: 40,\n            opacity: idx < hearts ? 1 : 0.3\n          }\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 743,\n        columnNumber: 9\n      }, this), phase === 'timegrub' || phase === 'tensephant' ? /*#__PURE__*/_jsxDEV(TimerBox, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            fontWeight: 700,\n            fontSize: '1.1rem',\n            fontFamily: 'monospace'\n          },\n          children: \"TIMER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            fontWeight: 700,\n            fontSize: '1.1rem',\n            fontFamily: 'monospace'\n          },\n          children: [timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 90\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 749,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"error\",\n        onClick: () => setShowQuit(true),\n        startIcon: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 96\n        }, this),\n        style: {\n          fontWeight: 700,\n          fontFamily: 'monospace',\n          borderRadius: 18,\n          marginLeft: 16\n        },\n        children: \"Quit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 7\n    }, this), content, /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showQuit,\n      onClose: () => setShowQuit(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          align: \"center\",\n          children: \"Are you sure you want to quit?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 756,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setShowQuit(false),\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => navigate('/jungle-lush'),\n          color: \"error\",\n          children: \"Quit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 761,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: gameOver && hearts === 0,\n      onClose: () => {},\n      children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          align: \"center\",\n          children: \"Game Over! Try again?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 766,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleRetryBattle,\n          color: \"primary\",\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 770,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => navigate('/jungle-lush'),\n          color: \"error\",\n          children: \"Quit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 769,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 765,\n      columnNumber: 7\n    }, this), victory && /*#__PURE__*/_jsxDEV(VictoryOverlay, {\n      children: /*#__PURE__*/_jsxDEV(VictoryContainer, {\n        elevation: 12,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            color: '#3a2a1a',\n            fontFamily: 'monospace',\n            fontWeight: 700,\n            fontSize: '1.1rem',\n            marginBottom: 2,\n            textAlign: 'center',\n            letterSpacing: 1\n          },\n          children: \"Battle Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StarRow, {\n          children: [1, 2, 3].map(i => /*#__PURE__*/_jsxDEV(Star, {\n            filled: hearts >= i,\n            children: \"\\u2605\"\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 781,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(VictoryTitle, {\n          children: [\"Victory!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 35\n          }, this), \"You've defeated Tensephant!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            color: '#3a2a1a',\n            fontFamily: 'monospace',\n            marginBottom: 24,\n            fontSize: '1.1rem',\n            textAlign: 'center'\n          },\n          children: \"The timeline is restored, and the jungle breathes freely again.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(VictoryButton, {\n          variant: \"contained\",\n          color: \"success\",\n          onClick: () => navigate('/jungle-lush'),\n          children: \"Return to Level Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(VictoryButton, {\n          variant: \"outlined\",\n          color: \"primary\",\n          onClick: handleRetryBattle,\n          children: \"Retry Level\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(VictoryButton, {\n          variant: \"outlined\",\n          color: \"error\",\n          onClick: () => navigate('/jungle-lush'),\n          children: \"Quit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 775,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"jl-return-btn\",\n      style: {\n        marginTop: 32\n      },\n      onClick: () => navigate('/jungle-lush'),\n      children: \"Return to Jungle Lush\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 794,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 733,\n    columnNumber: 5\n  }, this);\n};\n_s(JungleLushLevel2, \"Ro+yxMOCMuCE5oooJ/a01SqypWY=\", false, function () {\n  return [useNavigate];\n});\n_c31 = JungleLushLevel2;\nexport default JungleLushLevel2;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24, _c25, _c26, _c27, _c28, _c29, _c30, _c31;\n$RefreshReg$(_c, \"SceneContainer\");\n$RefreshReg$(_c2, \"Ground\");\n$RefreshReg$(_c3, \"SpritesRow\");\n$RefreshReg$(_c4, \"WizardUserGroup\");\n$RefreshReg$(_c5, \"MonsterGroup\");\n$RefreshReg$(_c6, \"WizardSprite\");\n$RefreshReg$(_c7, \"UserSprite\");\n$RefreshReg$(_c8, \"MonsterSprite\");\n$RefreshReg$(_c9, \"DialogueBox\");\n$RefreshReg$(_c10, \"NameTag\");\n$RefreshReg$(_c11, \"ClickPrompt\");\n$RefreshReg$(_c12, \"HeartRow\");\n$RefreshReg$(_c13, \"TimerBox\");\n$RefreshReg$(_c14, \"VS\");\n$RefreshReg$(_c15, \"TopBar\");\n$RefreshReg$(_c16, \"BattleSpritesRow\");\n$RefreshReg$(_c17, \"MonsterSpriteWrapper\");\n$RefreshReg$(_c18, \"BattleBottomBar\");\n$RefreshReg$(_c19, \"QuestionText\");\n$RefreshReg$(_c20, \"MonsterHPBar\");\n$RefreshReg$(_c21, \"MonsterHPFill\");\n$RefreshReg$(_c22, \"MonsterHPText\");\n$RefreshReg$(_c23, \"ChoicesGrid\");\n$RefreshReg$(_c24, \"MoveButton\");\n$RefreshReg$(_c25, \"StarRow\");\n$RefreshReg$(_c26, \"Star\");\n$RefreshReg$(_c27, \"VictoryOverlay\");\n$RefreshReg$(_c28, \"VictoryContainer\");\n$RefreshReg$(_c29, \"VictoryTitle\");\n$RefreshReg$(_c30, \"VictoryButton\");\n$RefreshReg$(_c31, \"JungleLushLevel2\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","Box","Typography","Button","Paper","Dialog","DialogActions","DialogContent","styled","keyframes","CloseIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","JUNGLE_BG","WIZARD_IMG","USER_IMG","TENSEPHANT_IMG","TIMEGRUB_IMG","HEART_IMG","bounce","shake","hit","userFlash","monsterFlash","SceneContainer","theme","width","height","display","flexDirection","alignItems","justifyContent","backgroundImage","backgroundSize","backgroundPosition","position","overflow","_c","Ground","left","bottom","background","zIndex","borderTopLeftRadius","borderTopRightRadius","boxShadow","_c2","SpritesRow","maxWidth","transform","pointerEvents","_c3","WizardUserGroup","gap","_c4","MonsterGroup","right","_c5","WizardSprite","filter","animation","_c6","UserSprite","isDamaged","_c7","MonsterSprite","_c8","FLESH_BROWN","NAME_BG","DialogueBox","minWidth","padding","spacing","backgroundColor","color","textAlign","borderRadius","border","fontFamily","boxSizing","_c9","NameTag","top","fontWeight","fontSize","_c10","ClickPrompt","opacity","_c11","HeartRow","_c12","TimerBox","marginLeft","_c13","VS","textShadow","margin","_c14","TopBar","_c15","CenterBar","BattleSpritesRow","marginBottom","minHeight","_c16","MonsterSpriteWrapper","_c17","BattleBottomBar","_c18","QuestionText","_c19","TIMER_DURATION","MonsterHPBar","_c20","MonsterHPFill","hp","transition","_c21","MonsterHPText","_c22","ChoicesGrid","count","gridTemplateColumns","gridTemplateRows","justifyItems","_c23","MoveButton","selected","outline","whiteSpace","wordBreak","_c24","StarRow","marginTop","_c25","Star","filled","_c26","dialogueSequence","speaker","text","timegrubQuestions","question","options","correctAnswer","preTensaphantDialogue","tensephantQuestions","MONSTER_MAX_HP","VictoryOverlay","_c27","VictoryContainer","_c28","VictoryTitle","_c29","VictoryButton","_c30","JungleLushLevel2","_s","navigate","phase","setPhase","dialogueIdx","setDialogueIdx","preTenseDialogueIdx","setPreTenseDialogueIdx","hearts","setHearts","timeLeft","setTimeLeft","monsterHP","setMonsterHP","monster","setMonster","currentQuestion","setCurrentQuestion","selectedAnswer","setSelectedAnswer","showResult","setShowResult","userDamaged","setUserDamaged","monsterDamaged","setMonsterDamaged","victory","setVictory","gameOver","setGameOver","showClickPrompt","setShowClickPrompt","showQuit","setShowQuit","idleTimeout","current","clearTimeout","setTimeout","timer","setInterval","t","clearInterval","h","handleDialogueClick","length","handleAnswer","idx","questions","newHP","Math","max","floor","prev","handleRetryBattle","content","d","children","src","fileName","_jsxFileName","lineNumber","columnNumber","elevation","onClick","style","cursor","userSelect","variant","gutterBottom","monsterImg","monsterName","map","option","disableRipple","disabled","Array","_","alt","flex","startIcon","open","onClose","align","letterSpacing","i","className","_c31","$RefreshReg$"],"sources":["C:/Users/Jake/Desktop/VocabVenture/Vocabventure/frontend/src/pages/Game/JungleLushLevel2.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Box, Typography, Button, Paper, Dialog, DialogActions, DialogContent } from '@mui/material';\r\nimport { styled, keyframes } from '@mui/material/styles';\r\nimport '../../styles/MapView.css';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nconst JUNGLE_BG = 'https://png.pngtree.com/background/20220727/original/pngtree-jungle-game-background-arcade-art-picture-image_1829537.jpg';\r\nconst WIZARD_IMG = 'https://www.shutterstock.com/image-vector/pixel-art-wizard-long-beard-260nw-2544146115.jpg';\r\nconst USER_IMG = 'https://w7.pngwing.com/pngs/928/303/png-transparent-pixel-dodgers-pixel-art-sprite-text-cartoon-fictional-character.png';\r\nconst TENSEPHANT_IMG = 'https://files.idyllic.app/files/static/2179601';\r\nconst TIMEGRUB_IMG = 'https://i.redd.it/fahn2okk3fy41.png';\r\nconst HEART_IMG = 'https://p7.hiclipart.com/preview/28/266/352/pixel-art-heart-8-bit-color-heart-thumbnail.jpg';\r\n\r\nconst bounce = keyframes`\r\n  0%, 100% { transform: translateY(0); }\r\n  50% { transform: translateY(-10px); }\r\n`;\r\nconst shake = keyframes`\r\n  0%, 100% { transform: translateX(0); }\r\n  25% { transform: translateX(-8px); }\r\n  75% { transform: translateX(8px); }\r\n`;\r\nconst hit = keyframes`\r\n  0% { transform: scale(1); }\r\n  25% { transform: scale(1.1); }\r\n  50% { transform: scale(0.9); }\r\n  75% { transform: scale(1.05); }\r\n  100% { transform: scale(1); }\r\n`;\r\nconst userFlash = keyframes`\r\n  0%, 100% { opacity: 1; filter: brightness(1); }\r\n  50% { opacity: 0.7; filter: brightness(1.2) sepia(1) saturate(10000%) hue-rotate(-50deg); }\r\n`;\r\nconst monsterFlash = keyframes`\r\n  0%, 100% { opacity: 1; filter: brightness(1); }\r\n  50% { opacity: 0.7; filter: brightness(1.2) sepia(1) saturate(10000%) hue-rotate(180deg); }\r\n`;\r\n\r\nconst SceneContainer = styled(Box)(({ theme }) => ({\r\n  width: '100%',\r\n  height: '100vh',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  justifyContent: 'flex-end',\r\n  backgroundImage: `url(${JUNGLE_BG})`,\r\n  backgroundSize: 'cover',\r\n  backgroundPosition: 'center',\r\n  position: 'relative',\r\n  overflow: 'hidden',\r\n}));\r\nconst Ground = styled(Box)(({ theme }) => ({\r\n  position: 'absolute',\r\n  left: 0,\r\n  bottom: '90px',\r\n  width: '100%',\r\n  height: '40px',\r\n  background: 'linear-gradient(to top, #3e2e1a 80%, rgba(62,46,26,0.2) 100%)',\r\n  zIndex: 2,\r\n  borderTopLeftRadius: '30px',\r\n  borderTopRightRadius: '30px',\r\n  boxShadow: '0 0 16px 2px rgba(0,0,0,0.25)',\r\n}));\r\nconst SpritesRow = styled(Box)(({ theme }) => ({\r\n  width: '900px',\r\n  maxWidth: '90vw',\r\n  position: 'absolute',\r\n  left: '50%',\r\n  transform: 'translateX(-50%)',\r\n  bottom: '130px',\r\n  height: '160px',\r\n  zIndex: 3,\r\n  pointerEvents: 'none',\r\n}));\r\nconst WizardUserGroup = styled(Box)(({ theme }) => ({\r\n  position: 'absolute',\r\n  left: 0,\r\n  bottom: 0,\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  alignItems: 'flex-end',\r\n  gap: '24px',\r\n}));\r\nconst MonsterGroup = styled(Box)(({ theme }) => ({\r\n  position: 'absolute',\r\n  right: 0,\r\n  bottom: 0,\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  alignItems: 'flex-end',\r\n  gap: '32px',\r\n}));\r\nconst WizardSprite = styled('img')({\r\n  width: '120px',\r\n  height: 'auto',\r\n  filter: 'drop-shadow(0 8px 16px rgba(0,0,0,0.5))',\r\n  animation: `${bounce} 2.2s infinite`,\r\n});\r\nconst UserSprite = styled('img')(({ isDamaged }) => ({\r\n  width: '100px',\r\n  height: 'auto',\r\n  filter: 'drop-shadow(0 8px 16px rgba(0,0,0,0.5))',\r\n  animation: `${bounce} 2s infinite, ${isDamaged ? `${shake} 0.5s ease-in-out, ${userFlash} 0.5s ease-in-out` : 'none'}`,\r\n}));\r\nconst MonsterSprite = styled('img')(({ isDamaged }) => ({\r\n  width: '140px',\r\n  height: 'auto',\r\n  filter: 'drop-shadow(0 8px 16px rgba(0,0,0,0.5))',\r\n  animation: `${bounce} 2.3s infinite, ${isDamaged ? `${hit} 0.5s ease-in-out, ${monsterFlash} 0.5s ease-in-out` : 'none'}`,\r\n}));\r\nconst FLESH_BROWN = '#e6c7b2';\r\nconst NAME_BG = '#d1a97a';\r\nconst DialogueBox = styled(Paper)(({ theme }) => ({\r\n  position: 'absolute',\r\n  left: '50%',\r\n  bottom: 0,\r\n  transform: 'translateX(-50%)',\r\n  width: '900px',\r\n  maxWidth: '90vw',\r\n  minWidth: '320px',\r\n  padding: theme.spacing(3, 4),\r\n  backgroundColor: FLESH_BROWN,\r\n  color: '#3a2a1a',\r\n  textAlign: 'left',\r\n  borderRadius: '18px 18px 0 0',\r\n  zIndex: 10,\r\n  boxShadow: '0 -2px 16px 2px rgba(0,0,0,0.18)',\r\n  border: '3px solid #b48a6e',\r\n  fontFamily: 'monospace',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'space-between',\r\n  boxSizing: 'border-box',\r\n}));\r\nconst NameTag = styled(Box)(({ theme }) => ({\r\n  position: 'absolute',\r\n  top: '-22px',\r\n  left: '18px',\r\n  background: NAME_BG,\r\n  color: '#3a2a1a',\r\n  borderRadius: '16px',\r\n  padding: '4px 18px',\r\n  fontWeight: 700,\r\n  fontSize: '1.1rem',\r\n  boxShadow: '0 2px 8px #b48a6e44',\r\n  border: '2px solid #b48a6e',\r\n  fontFamily: 'monospace',\r\n  zIndex: 2,\r\n}));\r\nconst ClickPrompt = styled(Box)(({ theme }) => ({\r\n  position: 'absolute',\r\n  bottom: '16px',\r\n  right: '32px',\r\n  color: '#00996b',\r\n  fontSize: '1.1rem',\r\n  fontWeight: 700,\r\n  opacity: 0.85,\r\n  pointerEvents: 'none',\r\n  zIndex: 5,\r\n  fontFamily: 'monospace',\r\n}));\r\nconst HeartRow = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  alignItems: 'center',\r\n  gap: '8px',\r\n  position: 'absolute',\r\n  top: '24px',\r\n  left: '32px',\r\n  zIndex: 20,\r\n}));\r\nconst TimerBox = styled(Box)(({ theme }) => ({\r\n  background: '#fffbe6',\r\n  color: '#3a2a1a',\r\n  borderRadius: '12px',\r\n  padding: '6px 18px',\r\n  fontWeight: 700,\r\n  fontFamily: 'monospace',\r\n  fontSize: '1.2rem',\r\n  boxShadow: '0 2px 8px #b48a6e44',\r\n  border: '2px solid #b48a6e',\r\n  zIndex: 20,\r\n  marginLeft: 16,\r\n}));\r\nconst VS = styled(Box)(({ theme }) => ({\r\n  fontSize: '2.5rem',\r\n  fontWeight: 900,\r\n  color: '#fff',\r\n  textShadow: '0 2px 8px #000',\r\n  margin: '0 18px',\r\n  zIndex: 22,\r\n  pointerEvents: 'none',\r\n}));\r\nconst TopBar = styled(Box)(({ theme }) => ({\r\n  width: '100%',\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  position: 'absolute',\r\n  top: 0,\r\n  left: 0,\r\n  zIndex: 30,\r\n  padding: '18px 32px',\r\n}));\r\nconst CenterBar = styled(Box)(({ theme }) => ({\r\n  position: 'absolute',\r\n  top: 24,\r\n  left: '50%',\r\n  transform: 'translateX(-50%)',\r\n  zIndex: 30,\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n}));\r\nconst BattleSpritesRow = styled(Box)(({ theme }) => ({\r\n  width: '100%',\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  alignItems: 'flex-end',\r\n  justifyContent: 'center',\r\n  marginBottom: '180px',\r\n  zIndex: 20,\r\n  pointerEvents: 'none',\r\n  minHeight: '220px',\r\n  position: 'relative',\r\n}));\r\nconst MonsterSpriteWrapper = styled(Box)(({ theme }) => ({\r\n  position: 'relative',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  justifyContent: 'flex-end',\r\n}));\r\nconst BattleBottomBar = styled(Box)(({ theme }) => ({\r\n  width: '100vw',\r\n  background: 'rgba(122,62,46,0.97)',\r\n  minHeight: '100px',\r\n  padding: '38px 0 18px 0',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  zIndex: 30,\r\n  borderTopLeftRadius: '32px',\r\n  borderTopRightRadius: '32px',\r\n  boxShadow: '0 -2px 24px 2px rgba(0,0,0,0.32)',\r\n  position: 'absolute',\r\n  left: 0,\r\n  bottom: 0,\r\n}));\r\nconst QuestionText = styled(Typography)(({ theme }) => ({\r\n  color: 'white',\r\n  fontWeight: 600,\r\n  fontSize: '1.35rem',\r\n  marginBottom: '22px',\r\n  textAlign: 'center',\r\n  textShadow: '0 2px 8px #000',\r\n}));\r\nconst TIMER_DURATION = 30;\r\nconst MonsterHPBar = styled(Box)(({ theme }) => ({\r\n  position: 'absolute',\r\n  top: '-30px',\r\n  left: '50%',\r\n  transform: 'translateX(-50%)',\r\n  width: '120px',\r\n  height: '12px',\r\n  backgroundColor: '#333',\r\n  borderRadius: '6px',\r\n  overflow: 'hidden',\r\n  border: '2px solid #fff',\r\n  boxShadow: '0 2px 4px rgba(0,0,0,0.3)',\r\n}));\r\nconst MonsterHPFill = styled(Box)(({ hp }) => ({\r\n  width: `${hp}%`,\r\n  height: '100%',\r\n  background: 'linear-gradient(90deg, #4caf50 60%, #b2ff59 100%)',\r\n  transition: 'width 0.4s',\r\n}));\r\nconst MonsterHPText = styled(Typography)(({ theme }) => ({\r\n  position: 'absolute',\r\n  top: '-48px',\r\n  left: '50%',\r\n  transform: 'translateX(-50%)',\r\n  color: '#fff',\r\n  fontWeight: 700,\r\n  fontSize: '1rem',\r\n  textShadow: '0 2px 8px #000',\r\n  zIndex: 10,\r\n}));\r\nconst ChoicesGrid = styled(Box)(({ theme, count }) => ({\r\n  width: count === 3 ? '520px' : '520px',\r\n  margin: '0 auto',\r\n  display: 'grid',\r\n  gridTemplateColumns: count === 3 ? '1fr 1fr 1fr' : '1fr 1fr',\r\n  gridTemplateRows: count === 3 ? '1fr' : '1fr 1fr',\r\n  gap: '18px',\r\n  justifyItems: 'stretch',\r\n  alignItems: 'stretch',\r\n  justifyContent: 'center',\r\n}));\r\nconst MoveButton = styled(Button)(({ selected }) => ({\r\n  width: '100%',\r\n  minHeight: '64px',\r\n  background: '#f8f8f8',\r\n  color: '#222',\r\n  fontFamily: 'monospace',\r\n  fontSize: '1.1rem',\r\n  border: selected ? '2.5px solid #d32f2f' : '2.5px solid #444',\r\n  borderRadius: '4px',\r\n  boxShadow: selected ? '0 0 0 2px #ffbdbd' : '0 0 0 2px #222',\r\n  outline: selected ? '2px solid #d32f2f' : 'none',\r\n  textAlign: 'center',\r\n  whiteSpace: 'normal',\r\n  wordBreak: 'break-word',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  padding: '8px 12px',\r\n  transition: 'border 0.1s, box-shadow 0.1s',\r\n  '&:hover': {\r\n    border: '2.5px solid #d32f2f',\r\n    boxShadow: '0 0 0 2px #ffbdbd',\r\n    background: '#fff3f3',\r\n  },\r\n}));\r\nconst StarRow = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  marginBottom: 10,\r\n  marginTop: -10,\r\n}));\r\nconst Star = styled('span')(({ filled }) => ({\r\n  fontSize: '2.2rem',\r\n  color: filled ? '#FFD700' : '#bdbdbd',\r\n  filter: filled ? 'drop-shadow(0 2px 6px #b48a6e88)' : 'none',\r\n  margin: '0 4px',\r\n  transition: 'color 0.2s',\r\n}));\r\n\r\n// Dialogue sequence for Level 2\r\nconst dialogueSequence = [\r\n  { speaker: 'Wizard', text: \"We've entered the edge of the jungle where time behaves… unusually.\" },\r\n  { speaker: 'User', text: \"It feels like everything is… stuck, or skipping forward?\" },\r\n  { speaker: 'Wizard', text: \"That is the influence of Tensaphant, the Tinkerer of Time. His distortions ripple through every sentence, every moment.\" },\r\n  { speaker: 'Wizard', text: \"Here, verbs bend out of shape. The past forgets itself. The future speaks in riddles. Be on guard.\" },\r\n  { speaker: 'User', text: \"So we're dealing with time grammar?\" },\r\n  { speaker: 'Wizard', text: \"Exactly. Master this, and you'll make the jungle breathe freely again.\" },\r\n  { speaker: 'Tensaphant', text: \"Foolish mortal... trudging through my warped domain.\" },\r\n  { speaker: 'Tensaphant', text: \"The villagers babble nonsense now, caught in echoes of incorrect tenses. I like it that way.\" },\r\n  { speaker: 'User', text: \"Then you won't like what comes next.\" },\r\n  { speaker: 'Tensaphant', text: \"Before you challenge me, face my echo from a fractured timeline.\" },\r\n  { speaker: 'Timegrub', text: \"Past, present, future... all blend in my belly!\" },\r\n  { speaker: 'Timegrub', text: \"Get the tense wrong, and I'll gnaw on your precious hearts!\" },\r\n  { speaker: 'User', text: \"You'll be burping grammar rules by the time I'm done.\" },\r\n];\r\n\r\n// Questions for Timegrub (3)\r\nconst timegrubQuestions = [\r\n  {\r\n    question: 'Choose the correct sentence (past tense):',\r\n    options: [\r\n      'She eats dinner already.',\r\n      'She ate dinner already.',\r\n      'She eat dinner already.'\r\n    ],\r\n    correctAnswer: 1\r\n  },\r\n  {\r\n    question: 'Select the correct future tense:',\r\n    options: [\r\n      'They will go to the museum tomorrow.',\r\n      'They goes to the museum tomorrow.',\r\n      'They going to the museum tomorrow.'\r\n    ],\r\n    correctAnswer: 0\r\n  },\r\n  {\r\n    question: 'Choose the proper tense:',\r\n    options: [\r\n      'He has finish his test.',\r\n      'He have finished his test.',\r\n      'He has finished his test.'\r\n    ],\r\n    correctAnswer: 2\r\n  },\r\n];\r\n\r\n// Pre-Tensaphant battle dialogue\r\nconst preTensaphantDialogue = [\r\n  { speaker: 'Timegrub', text: \"Urghh… the timeline... corrected… *faints\" },\r\n  { speaker: 'Tensaphant', text: \"You've disrupted my rhythm!\" },\r\n  { speaker: 'User', text: \"Then I'll break the rest of your clock!\" },\r\n  { speaker: 'Tensaphant', text: \"Let's see how well you handle me, time meddler!\" },\r\n];\r\n\r\n// Questions for Tensaphant (5)\r\nconst tensephantQuestions = [\r\n  {\r\n    question: 'Which sentence is in the simple past tense?',\r\n    options: [\r\n      'She has baked a cake.',\r\n      'She baked a cake.',\r\n      'She was baking a cake.'\r\n    ],\r\n    correctAnswer: 1\r\n  },\r\n  {\r\n    question: 'Choose the correct future perfect tense:',\r\n    options: [\r\n      'I will have finish my work before lunch.',\r\n      'I will have finished my work before lunch.',\r\n      'I had finished my work before lunch.'\r\n    ],\r\n    correctAnswer: 1\r\n  },\r\n  {\r\n    question: 'Which sentence is in the past continuous tense?',\r\n    options: [\r\n      'They were play outside.',\r\n      'They had been playing outside.',\r\n      'They were playing outside.'\r\n    ],\r\n    correctAnswer: 2\r\n  },\r\n  {\r\n    question: 'Pick the correct present perfect continuous sentence:',\r\n    options: [\r\n      'I have been studied all night.',\r\n      'I have been studying all night.',\r\n      'I was studying all night.'\r\n    ],\r\n    correctAnswer: 1\r\n  },\r\n  {\r\n    question: 'Which one is in the future continuous tense?',\r\n    options: [\r\n      'She will be sing at the event.',\r\n      'She will be singing at the event.',\r\n      'She is singing at the event tomorrow.'\r\n    ],\r\n    correctAnswer: 1\r\n  },\r\n];\r\n\r\nconst MONSTER_MAX_HP = 100;\r\n\r\nconst VictoryOverlay = styled(Box)(({ theme }) => ({\r\n  position: 'fixed',\r\n  top: 0,\r\n  left: 0,\r\n  width: '100vw',\r\n  height: '100vh',\r\n  background: 'rgba(30, 20, 10, 0.55)',\r\n  zIndex: 1000,\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n}));\r\nconst VictoryContainer = styled(Paper)(({ theme }) => ({\r\n  minWidth: 380,\r\n  maxWidth: '90vw',\r\n  padding: '48px 36px 36px 36px',\r\n  borderRadius: 24,\r\n  background: '#fffbe6',\r\n  boxShadow: '0 8px 48px 8px #000a',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  zIndex: 1100,\r\n  border: '4px solid #b48a6e',\r\n}));\r\nconst VictoryTitle = styled(Typography)(({ theme }) => ({\r\n  fontWeight: 900,\r\n  fontSize: '2.2rem',\r\n  color: '#00996b',\r\n  marginBottom: 18,\r\n  textShadow: '0 2px 8px #b48a6e44',\r\n  fontFamily: 'monospace',\r\n  textAlign: 'center',\r\n}));\r\nconst VictoryButton = styled(Button)(({ theme }) => ({\r\n  fontWeight: 700,\r\n  fontFamily: 'monospace',\r\n  fontSize: '1.1rem',\r\n  borderRadius: 16,\r\n  margin: '12px 0',\r\n  minWidth: 180,\r\n  boxShadow: '0 2px 8px #b48a6e44',\r\n}));\r\n\r\nconst JungleLushLevel2 = () => {\r\n  const navigate = useNavigate();\r\n  // Dialogue and battle state\r\n  const [phase, setPhase] = useState('dialogue'); // dialogue, timegrub, pretense, tensephant, victory, gameover\r\n  const [dialogueIdx, setDialogueIdx] = useState(0);\r\n  const [preTenseDialogueIdx, setPreTenseDialogueIdx] = useState(0);\r\n  // Battle state\r\n  const [hearts, setHearts] = useState(3);\r\n  const [timeLeft, setTimeLeft] = useState(TIMER_DURATION);\r\n  const [monsterHP, setMonsterHP] = useState(MONSTER_MAX_HP);\r\n  const [monster, setMonster] = useState('timegrub'); // 'timegrub' or 'tensephant'\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [userDamaged, setUserDamaged] = useState(false);\r\n  const [monsterDamaged, setMonsterDamaged] = useState(false);\r\n  const [victory, setVictory] = useState(false);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [showClickPrompt, setShowClickPrompt] = useState(false);\r\n  const [showQuit, setShowQuit] = useState(false);\r\n  const idleTimeout = useRef(null);\r\n\r\n  // Dialogue click/idle logic\r\n  useEffect(() => {\r\n    setShowClickPrompt(false);\r\n    if (idleTimeout.current) clearTimeout(idleTimeout.current);\r\n    if (phase === 'dialogue' || phase === 'pretense') {\r\n      idleTimeout.current = setTimeout(() => setShowClickPrompt(true), 2000);\r\n    }\r\n    return () => clearTimeout(idleTimeout.current);\r\n  }, [dialogueIdx, phase, preTenseDialogueIdx]);\r\n\r\n  // Timer logic\r\n  useEffect(() => {\r\n    if ((phase === 'timegrub' || phase === 'tensephant') && timeLeft > 0 && !victory && !gameOver) {\r\n      const timer = setInterval(() => setTimeLeft(t => t - 1), 1000);\r\n      return () => clearInterval(timer);\r\n    } else if ((phase === 'timegrub' || phase === 'tensephant') && timeLeft === 0 && !victory && !gameOver) {\r\n      // Decrease heart, reset timer or game over\r\n      if (hearts > 1) {\r\n        setHearts(h => h - 1);\r\n        setTimeLeft(TIMER_DURATION);\r\n        setSelectedAnswer(null);\r\n        setShowResult(false);\r\n      } else {\r\n        setHearts(0);\r\n        setGameOver(true);\r\n      }\r\n    }\r\n  }, [phase, timeLeft, victory, gameOver, hearts]);\r\n\r\n  // Dialogue click handler\r\n  const handleDialogueClick = () => {\r\n    setShowClickPrompt(false);\r\n    if (idleTimeout.current) clearTimeout(idleTimeout.current);\r\n    if (phase === 'dialogue') {\r\n      if (dialogueIdx < dialogueSequence.length - 1) {\r\n        setDialogueIdx(dialogueIdx + 1);\r\n      } else {\r\n        // Start Timegrub battle\r\n        setPhase('timegrub');\r\n        setMonster('timegrub');\r\n        setMonsterHP(MONSTER_MAX_HP);\r\n        setCurrentQuestion(0);\r\n        setTimeLeft(TIMER_DURATION);\r\n      }\r\n    } else if (phase === 'pretense') {\r\n      if (preTenseDialogueIdx < preTensaphantDialogue.length - 1) {\r\n        setPreTenseDialogueIdx(preTenseDialogueIdx + 1);\r\n      } else {\r\n        // Start Tensephant battle\r\n        setPhase('tensephant');\r\n        setMonster('tensephant');\r\n        setMonsterHP(MONSTER_MAX_HP);\r\n        setCurrentQuestion(0);\r\n        setTimeLeft(TIMER_DURATION);\r\n        setSelectedAnswer(null);\r\n        setShowResult(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Answer handler\r\n  const handleAnswer = (idx) => {\r\n    setSelectedAnswer(idx);\r\n    setShowResult(true);\r\n    const questions = monster === 'timegrub' ? timegrubQuestions : tensephantQuestions;\r\n    if (idx === questions[currentQuestion].correctAnswer) {\r\n      setMonsterDamaged(true);\r\n      setTimeout(() => setMonsterDamaged(false), 500);\r\n      setMonsterHP(hp => {\r\n        const newHP = Math.max(0, hp - Math.floor(MONSTER_MAX_HP / questions.length));\r\n        if (currentQuestion === questions.length - 1 || newHP === 0) {\r\n          if (monster === 'timegrub') {\r\n            // Pre-Tensephant dialogue\r\n            setPhase('pretense');\r\n            setPreTenseDialogueIdx(0);\r\n          } else {\r\n            setVictory(true);\r\n          }\r\n        }\r\n        return newHP;\r\n      });\r\n      if (currentQuestion < questions.length - 1) {\r\n        setTimeout(() => {\r\n          setCurrentQuestion(prev => prev + 1);\r\n          setSelectedAnswer(null);\r\n          setShowResult(false);\r\n          setTimeLeft(TIMER_DURATION);\r\n        }, 600);\r\n      }\r\n    } else {\r\n      setUserDamaged(true);\r\n      setTimeout(() => setUserDamaged(false), 500);\r\n      if (hearts > 1) {\r\n        setTimeout(() => {\r\n          setHearts(h => h - 1);\r\n          setSelectedAnswer(null);\r\n          setShowResult(false);\r\n          setTimeLeft(TIMER_DURATION);\r\n        }, 600);\r\n      } else {\r\n        setTimeout(() => {\r\n          setHearts(0);\r\n          setGameOver(true);\r\n        }, 600);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Retry handler\r\n  const handleRetryBattle = () => {\r\n    setHearts(3);\r\n    setTimeLeft(TIMER_DURATION);\r\n    setMonsterHP(MONSTER_MAX_HP);\r\n    setCurrentQuestion(0);\r\n    setSelectedAnswer(null);\r\n    setShowResult(false);\r\n    setGameOver(false);\r\n    setVictory(false);\r\n    // Only reset the current battle phase, not the whole level\r\n    if (phase === 'tensephant') {\r\n      setPhase('tensephant');\r\n      setMonster('tensephant');\r\n    } else {\r\n      setPhase('timegrub');\r\n      setMonster('timegrub');\r\n    }\r\n  };\r\n\r\n  // Render logic\r\n  let content = null;\r\n  if (phase === 'dialogue') {\r\n    const d = dialogueSequence[dialogueIdx];\r\n    content = (\r\n      <>\r\n        <SpritesRow>\r\n          <WizardUserGroup>\r\n            <WizardSprite src={WIZARD_IMG} />\r\n            <UserSprite src={USER_IMG} />\r\n          </WizardUserGroup>\r\n          <MonsterGroup>\r\n            {d.speaker === 'Tensaphant' && <MonsterSprite src={TENSEPHANT_IMG} />}\r\n            {d.speaker === 'Timegrub' && <MonsterSprite src={TIMEGRUB_IMG} />}\r\n          </MonsterGroup>\r\n        </SpritesRow>\r\n        <DialogueBox elevation={6} onClick={handleDialogueClick} style={{ cursor: 'pointer', userSelect: 'none', marginTop: 180 }}>\r\n          <NameTag>{d.speaker}</NameTag>\r\n          <Typography variant=\"h6\" gutterBottom style={{ marginTop: 18, fontFamily: 'monospace' }}>\r\n            {d.text}\r\n          </Typography>\r\n          {showClickPrompt && <ClickPrompt>Click to continue</ClickPrompt>}\r\n        </DialogueBox>\r\n      </>\r\n    );\r\n  } else if (phase === 'timegrub' || phase === 'tensephant') {\r\n    const questions = monster === 'timegrub' ? timegrubQuestions : tensephantQuestions;\r\n    const monsterImg = monster === 'timegrub' ? TIMEGRUB_IMG : TENSEPHANT_IMG;\r\n    const monsterName = monster === 'timegrub' ? 'Timegrub' : 'Tensaphant';\r\n    content = (\r\n      <>\r\n        <BattleSpritesRow>\r\n          <UserSprite src={USER_IMG} isDamaged={userDamaged} />\r\n          <VS>VS</VS>\r\n          <MonsterSpriteWrapper>\r\n            <MonsterHPText>{monsterName} HP</MonsterHPText>\r\n            <MonsterHPBar>\r\n              <MonsterHPFill hp={monsterHP} />\r\n            </MonsterHPBar>\r\n            <MonsterSprite src={monsterImg} isDamaged={monsterDamaged} />\r\n          </MonsterSpriteWrapper>\r\n        </BattleSpritesRow>\r\n        <BattleBottomBar>\r\n          <QuestionText>\r\n            {questions[currentQuestion].question}\r\n          </QuestionText>\r\n          <ChoicesGrid count={questions[currentQuestion].options.length}>\r\n            {questions[currentQuestion].options.map((option, idx) => (\r\n              <MoveButton\r\n                key={idx}\r\n                selected={selectedAnswer === idx}\r\n                onClick={() => handleAnswer(idx)}\r\n                disableRipple\r\n                style={{ fontFamily: 'monospace' }}\r\n                disabled={showResult}\r\n              >\r\n                {option}\r\n              </MoveButton>\r\n            ))}\r\n          </ChoicesGrid>\r\n        </BattleBottomBar>\r\n      </>\r\n    );\r\n  } else if (phase === 'pretense') {\r\n    const d = preTensaphantDialogue[preTenseDialogueIdx];\r\n    content = (\r\n      <>\r\n        <SpritesRow>\r\n          <WizardUserGroup>\r\n            <WizardSprite src={WIZARD_IMG} />\r\n            <UserSprite src={USER_IMG} />\r\n          </WizardUserGroup>\r\n          <MonsterGroup>\r\n            {d.speaker === 'Tensaphant' && <MonsterSprite src={TENSEPHANT_IMG} />}\r\n            {d.speaker === 'Timegrub' && <MonsterSprite src={TIMEGRUB_IMG} />}\r\n          </MonsterGroup>\r\n        </SpritesRow>\r\n        <DialogueBox elevation={6} onClick={handleDialogueClick} style={{ cursor: 'pointer', userSelect: 'none', marginTop: 180 }}>\r\n          <NameTag>{d.speaker}</NameTag>\r\n          <Typography variant=\"h6\" gutterBottom style={{ marginTop: 18, fontFamily: 'monospace' }}>\r\n            {d.text}\r\n          </Typography>\r\n          {showClickPrompt && <ClickPrompt>Click to continue</ClickPrompt>}\r\n        </DialogueBox>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SceneContainer>\r\n      <Ground />\r\n      <TopBar>\r\n        {(phase === 'timegrub' || phase === 'tensephant') ? (\r\n          <HeartRow>\r\n            {[...Array(3)].map((_, idx) => (\r\n              <img key={idx} src={HEART_IMG} alt=\"Heart\" style={{ width: 40, height: 40, opacity: idx < hearts ? 1 : 0.3 }} />\r\n            ))}\r\n          </HeartRow>\r\n        ) : <div />}\r\n        <div style={{ flex: 1 }} />\r\n        {(phase === 'timegrub' || phase === 'tensephant') ? (\r\n          <TimerBox>\r\n            <Typography style={{ fontWeight: 700, fontSize: '1.1rem', fontFamily: 'monospace' }}>TIMER</Typography>\r\n            <Typography style={{ fontWeight: 700, fontSize: '1.1rem', fontFamily: 'monospace' }}>{timeLeft}s</Typography>\r\n          </TimerBox>\r\n        ) : <div style={{ width: 90 }} />}\r\n        <Button variant=\"contained\" color=\"error\" onClick={() => setShowQuit(true)} startIcon={<CloseIcon />} style={{ fontWeight: 700, fontFamily: 'monospace', borderRadius: 18, marginLeft: 16 }}>\r\n          Quit\r\n        </Button>\r\n      </TopBar>\r\n      {content}\r\n      <Dialog open={showQuit} onClose={() => setShowQuit(false)}>\r\n        <DialogContent>\r\n          <Typography variant=\"h6\" align=\"center\">Are you sure you want to quit?</Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setShowQuit(false)} color=\"primary\">Cancel</Button>\r\n          <Button onClick={() => navigate('/jungle-lush')} color=\"error\">Quit</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* Game over dialog only (not for victory) */}\r\n      <Dialog open={gameOver && hearts === 0} onClose={() => {}}>\r\n        <DialogContent>\r\n          <Typography variant=\"h5\" align=\"center\">Game Over! Try again?</Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleRetryBattle} color=\"primary\">Retry</Button>\r\n          <Button onClick={() => navigate('/jungle-lush')} color=\"error\">Quit</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {victory && (\r\n        <VictoryOverlay>\r\n          <VictoryContainer elevation={12}>\r\n            {/* Star rating */}\r\n            <Typography style={{ color: '#3a2a1a', fontFamily: 'monospace', fontWeight: 700, fontSize: '1.1rem', marginBottom: 2, textAlign: 'center', letterSpacing: 1 }}>Battle Rating</Typography>\r\n            <StarRow>\r\n              {[1,2,3].map(i => (\r\n                <Star key={i} filled={hearts >= i}>★</Star>\r\n              ))}\r\n            </StarRow>\r\n            <VictoryTitle>Victory!<br />You've defeated Tensephant!</VictoryTitle>\r\n            <Typography style={{ color: '#3a2a1a', fontFamily: 'monospace', marginBottom: 24, fontSize: '1.1rem', textAlign: 'center' }}>\r\n              The timeline is restored, and the jungle breathes freely again.\r\n            </Typography>\r\n            <VictoryButton variant=\"contained\" color=\"success\" onClick={() => navigate('/jungle-lush')}>Return to Level Select</VictoryButton>\r\n            <VictoryButton variant=\"outlined\" color=\"primary\" onClick={handleRetryBattle}>Retry Level</VictoryButton>\r\n            <VictoryButton variant=\"outlined\" color=\"error\" onClick={() => navigate('/jungle-lush')}>Quit</VictoryButton>\r\n          </VictoryContainer>\r\n        </VictoryOverlay>\r\n      )}\r\n      <button className=\"jl-return-btn\" style={{ marginTop: 32 }} onClick={() => navigate('/jungle-lush')}>Return to Jungle Lush</button>\r\n    </SceneContainer>\r\n  );\r\n};\r\n\r\nexport default JungleLushLevel2; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}