{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jake\\\\Desktop\\\\VocabVenture\\\\Vocabventure\\\\frontend\\\\src\\\\pages\\\\Game\\\\CommawidowLevel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Typography, Button, Dialog, DialogContent, DialogActions, Paper, Grid, Container } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DialogueBox = styled(Paper)(({\n  theme\n}) => ({\n  padding: theme.spacing(3),\n  marginBottom: theme.spacing(2),\n  backgroundColor: 'rgba(0, 0, 0, 0.8)',\n  color: 'white',\n  borderRadius: '10px',\n  border: '2px solid #00ffaa'\n}));\n_c = DialogueBox;\nconst CharacterName = styled(Typography)(({\n  theme\n}) => ({\n  color: '#00ffaa',\n  fontWeight: 'bold',\n  marginBottom: theme.spacing(1)\n}));\n_c2 = CharacterName;\nconst QuestionBox = styled(Paper)(({\n  theme\n}) => ({\n  padding: theme.spacing(3),\n  marginBottom: theme.spacing(2),\n  backgroundColor: 'rgba(0, 0, 0, 0.8)',\n  color: 'white',\n  borderRadius: '10px',\n  border: '2px solid #ff4444'\n}));\n_c3 = QuestionBox;\nconst AnswerButton = styled(Button)(({\n  theme,\n  selected,\n  correct\n}) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n  marginBottom: theme.spacing(1),\n  backgroundColor: selected ? correct ? 'rgba(0, 255, 0, 0.2)' : 'rgba(255, 0, 0, 0.2)' : 'rgba(40, 40, 100, 0.8)',\n  color: 'white',\n  border: `2px solid ${selected ? correct ? '#00ff00' : '#ff0000' : '#00ffaa'}`,\n  '&:hover': {\n    backgroundColor: 'rgba(0, 255, 170, 0.2)'\n  }\n}));\n_c4 = AnswerButton;\nconst HealthBar = styled(Box)(({\n  theme\n}) => ({\n  width: '100%',\n  height: '20px',\n  backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  borderRadius: '10px',\n  marginBottom: theme.spacing(2),\n  overflow: 'hidden'\n}));\n_c5 = HealthBar;\nconst HealthFill = styled(Box)(({\n  health\n}) => ({\n  width: `${health}%`,\n  height: '100%',\n  backgroundColor: health > 50 ? '#00ff00' : health > 25 ? '#ffff00' : '#ff0000',\n  transition: 'width 0.3s ease-in-out'\n}));\n_c6 = HealthFill;\nconst Timer = styled(Typography)(({\n  theme\n}) => ({\n  color: '#00ffaa',\n  fontSize: '1.5rem',\n  fontWeight: 'bold',\n  textAlign: 'center',\n  marginBottom: theme.spacing(2)\n}));\n_c7 = Timer;\nconst dialogueSequence = [{\n  speaker: \"Wizard\",\n  text: \"This is it... the jungle where Grammowl's corruption began.\"\n}, {\n  speaker: \"User\",\n  text: \"So this is where the first scroll was stolen?\"\n}, {\n  speaker: \"Wizard\",\n  text: \"Yes. The Scroll of Grammar lies deep within Grammowl's tower. But the path is twisted with beasts that warp language into nonsense.\"\n}, {\n  speaker: \"Grammowl\",\n  text: \"Foolish fledgling... You flutter into my grove thinking you can rewrite fate?\"\n}, {\n  speaker: \"User\",\n  text: \"Grammowl!\"\n}, {\n  speaker: \"Grammowl\",\n  text: \"The Scroll belongs to me now. Without it, the villagers' minds will stay broken... just how I like them.\"\n}, {\n  speaker: \"Wizard\",\n  text: \"Grammowl, your reign of confusion ends here! Chosen one, prepare yourself!\"\n}, {\n  speaker: \"Grammowl\",\n  text: \"You'll have to get through my little pets first… if your tiny brain can handle proper punctuation!\"\n}, {\n  speaker: \"Commawidow\",\n  text: \"Welcome to my web, sweet reader. One misplaced pause… and you'll be tangled for eternity!\"\n}, {\n  speaker: \"User\",\n  text: \"I'm not afraid of your tricks!\"\n}, {\n  speaker: \"Commawidow\",\n  text: \"Then let's play a little game… Answer wrong, and you'll feel the sting of silence!\"\n}];\nconst questions = [{\n  question: \"Which sentence uses commas correctly in a list?\",\n  options: [\"I packed my books pencils and erasers.\", \"I packed my books, pencils and erasers.\", \"I packed my books, pencils, and erasers.\"],\n  correctAnswer: 2\n}, {\n  question: \"Which greeting is correctly punctuated?\",\n  options: [\"Hello John.\", \"Hello, John.\", \"Hello John,\"],\n  correctAnswer: 1\n}, {\n  question: \"Choose the sentence with correct punctuation.\",\n  options: [\"I wanted to play but it started raining.\", \"I wanted to play, but it started raining.\", \"I wanted to play but, it started raining.\"],\n  correctAnswer: 1\n}, {\n  question: \"Which sentence uses a comma correctly?\",\n  options: [\"After dinner we went for a walk.\", \"After dinner, we went for a walk.\", \"After, dinner we went for a walk.\"],\n  correctAnswer: 1\n}, {\n  question: \"Which sentence uses commas correctly?\",\n  options: [\"It was a cold dark night.\", \"It was a cold, dark night.\", \"It was a cold dark, night.\"],\n  correctAnswer: 1\n}];\nconst CommawidowLevel = () => {\n  _s();\n  const navigate = useNavigate();\n  const [currentDialogue, setCurrentDialogue] = useState(0);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [health, setHealth] = useState(100);\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [showResult, setShowResult] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [victory, setVictory] = useState(false);\n  useEffect(() => {\n    if (currentDialogue < dialogueSequence.length) {\n      const timer = setTimeout(() => {\n        setCurrentDialogue(prev => prev + 1);\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [currentDialogue]);\n  useEffect(() => {\n    if (timeLeft > 0 && !gameOver && !victory) {\n      const timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n      return () => clearInterval(timer);\n    } else if (timeLeft === 0) {\n      setGameOver(true);\n    }\n  }, [timeLeft, gameOver, victory]);\n  const handleAnswer = index => {\n    setSelectedAnswer(index);\n    setShowResult(true);\n    if (index === questions[currentQuestion].correctAnswer) {\n      if (currentQuestion === questions.length - 1) {\n        setVictory(true);\n      } else {\n        setTimeout(() => {\n          setCurrentQuestion(prev => prev + 1);\n          setSelectedAnswer(null);\n          setShowResult(false);\n        }, 1500);\n      }\n    } else {\n      setHealth(prev => Math.max(0, prev - 20));\n      if (health <= 20) {\n        setGameOver(true);\n      }\n    }\n  };\n  const handleContinue = () => {\n    if (victory) {\n      navigate('/jungle-lush');\n    } else if (gameOver) {\n      navigate('/jungle-lush');\n    }\n  };\n  if (currentDialogue < dialogueSequence.length) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      sx: {\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(DialogueBox, {\n        children: [/*#__PURE__*/_jsxDEV(CharacterName, {\n          variant: \"h6\",\n          children: dialogueSequence[currentDialogue].speaker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: dialogueSequence[currentDialogue].text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(HealthBar, {\n            children: /*#__PURE__*/_jsxDEV(HealthFill, {\n              health: health\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Timer, {\n            children: [timeLeft, \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(QuestionBox, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            gutterBottom: true,\n            children: questions[currentQuestion].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(AnswerButton, {\n                variant: \"contained\",\n                onClick: () => handleAnswer(index),\n                disabled: showResult,\n                selected: selectedAnswer === index,\n                correct: index === questions[currentQuestion].correctAnswer,\n                children: option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: gameOver || victory,\n      onClose: handleContinue,\n      children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          align: \"center\",\n          children: victory ? \"Victory! You've defeated Commawidow!\" : \"Game Over! Try again!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleContinue,\n          color: \"primary\",\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n};\n_s(CommawidowLevel, \"IkgvRbn8nFJWvJe5Tck1GhbwccA=\", false, function () {\n  return [useNavigate];\n});\n_c8 = CommawidowLevel;\nexport default CommawidowLevel;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"DialogueBox\");\n$RefreshReg$(_c2, \"CharacterName\");\n$RefreshReg$(_c3, \"QuestionBox\");\n$RefreshReg$(_c4, \"AnswerButton\");\n$RefreshReg$(_c5, \"HealthBar\");\n$RefreshReg$(_c6, \"HealthFill\");\n$RefreshReg$(_c7, \"Timer\");\n$RefreshReg$(_c8, \"CommawidowLevel\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Box","Typography","Button","Dialog","DialogContent","DialogActions","Paper","Grid","Container","styled","jsxDEV","_jsxDEV","DialogueBox","theme","padding","spacing","marginBottom","backgroundColor","color","borderRadius","border","_c","CharacterName","fontWeight","_c2","QuestionBox","_c3","AnswerButton","selected","correct","width","_c4","HealthBar","height","overflow","_c5","HealthFill","health","transition","_c6","Timer","fontSize","textAlign","_c7","dialogueSequence","speaker","text","questions","question","options","correctAnswer","CommawidowLevel","_s","navigate","currentDialogue","setCurrentDialogue","currentQuestion","setCurrentQuestion","setHealth","timeLeft","setTimeLeft","selectedAnswer","setSelectedAnswer","showResult","setShowResult","gameOver","setGameOver","victory","setVictory","length","timer","setTimeout","prev","clearTimeout","setInterval","clearInterval","handleAnswer","index","Math","max","handleContinue","maxWidth","sx","mt","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","container","item","xs","display","justifyContent","mb","gutterBottom","map","option","onClick","disabled","open","onClose","align","_c8","$RefreshReg$"],"sources":["C:/Users/Jake/Desktop/VocabVenture/Vocabventure/frontend/src/pages/Game/CommawidowLevel.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogActions,\r\n  Paper,\r\n  Grid,\r\n  Container,\r\n} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst DialogueBox = styled(Paper)(({ theme }) => ({\r\n  padding: theme.spacing(3),\r\n  marginBottom: theme.spacing(2),\r\n  backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n  color: 'white',\r\n  borderRadius: '10px',\r\n  border: '2px solid #00ffaa',\r\n}));\r\n\r\nconst CharacterName = styled(Typography)(({ theme }) => ({\r\n  color: '#00ffaa',\r\n  fontWeight: 'bold',\r\n  marginBottom: theme.spacing(1),\r\n}));\r\n\r\nconst QuestionBox = styled(Paper)(({ theme }) => ({\r\n  padding: theme.spacing(3),\r\n  marginBottom: theme.spacing(2),\r\n  backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n  color: 'white',\r\n  borderRadius: '10px',\r\n  border: '2px solid #ff4444',\r\n}));\r\n\r\nconst AnswerButton = styled(Button)(({ theme, selected, correct }) => ({\r\n  width: '100%',\r\n  padding: theme.spacing(2),\r\n  marginBottom: theme.spacing(1),\r\n  backgroundColor: selected \r\n    ? correct \r\n      ? 'rgba(0, 255, 0, 0.2)' \r\n      : 'rgba(255, 0, 0, 0.2)'\r\n    : 'rgba(40, 40, 100, 0.8)',\r\n  color: 'white',\r\n  border: `2px solid ${selected \r\n    ? correct \r\n      ? '#00ff00' \r\n      : '#ff0000'\r\n    : '#00ffaa'}`,\r\n  '&:hover': {\r\n    backgroundColor: 'rgba(0, 255, 170, 0.2)',\r\n  },\r\n}));\r\n\r\nconst HealthBar = styled(Box)(({ theme }) => ({\r\n  width: '100%',\r\n  height: '20px',\r\n  backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n  borderRadius: '10px',\r\n  marginBottom: theme.spacing(2),\r\n  overflow: 'hidden',\r\n}));\r\n\r\nconst HealthFill = styled(Box)(({ health }) => ({\r\n  width: `${health}%`,\r\n  height: '100%',\r\n  backgroundColor: health > 50 ? '#00ff00' : health > 25 ? '#ffff00' : '#ff0000',\r\n  transition: 'width 0.3s ease-in-out',\r\n}));\r\n\r\nconst Timer = styled(Typography)(({ theme }) => ({\r\n  color: '#00ffaa',\r\n  fontSize: '1.5rem',\r\n  fontWeight: 'bold',\r\n  textAlign: 'center',\r\n  marginBottom: theme.spacing(2),\r\n}));\r\n\r\nconst dialogueSequence = [\r\n  { speaker: \"Wizard\", text: \"This is it... the jungle where Grammowl's corruption began.\" },\r\n  { speaker: \"User\", text: \"So this is where the first scroll was stolen?\" },\r\n  { speaker: \"Wizard\", text: \"Yes. The Scroll of Grammar lies deep within Grammowl's tower. But the path is twisted with beasts that warp language into nonsense.\" },\r\n  { speaker: \"Grammowl\", text: \"Foolish fledgling... You flutter into my grove thinking you can rewrite fate?\" },\r\n  { speaker: \"User\", text: \"Grammowl!\" },\r\n  { speaker: \"Grammowl\", text: \"The Scroll belongs to me now. Without it, the villagers' minds will stay broken... just how I like them.\" },\r\n  { speaker: \"Wizard\", text: \"Grammowl, your reign of confusion ends here! Chosen one, prepare yourself!\" },\r\n  { speaker: \"Grammowl\", text: \"You'll have to get through my little pets first… if your tiny brain can handle proper punctuation!\" },\r\n  { speaker: \"Commawidow\", text: \"Welcome to my web, sweet reader. One misplaced pause… and you'll be tangled for eternity!\" },\r\n  { speaker: \"User\", text: \"I'm not afraid of your tricks!\" },\r\n  { speaker: \"Commawidow\", text: \"Then let's play a little game… Answer wrong, and you'll feel the sting of silence!\" },\r\n];\r\n\r\nconst questions = [\r\n  {\r\n    question: \"Which sentence uses commas correctly in a list?\",\r\n    options: [\r\n      \"I packed my books pencils and erasers.\",\r\n      \"I packed my books, pencils and erasers.\",\r\n      \"I packed my books, pencils, and erasers.\"\r\n    ],\r\n    correctAnswer: 2\r\n  },\r\n  {\r\n    question: \"Which greeting is correctly punctuated?\",\r\n    options: [\r\n      \"Hello John.\",\r\n      \"Hello, John.\",\r\n      \"Hello John,\"\r\n    ],\r\n    correctAnswer: 1\r\n  },\r\n  {\r\n    question: \"Choose the sentence with correct punctuation.\",\r\n    options: [\r\n      \"I wanted to play but it started raining.\",\r\n      \"I wanted to play, but it started raining.\",\r\n      \"I wanted to play but, it started raining.\"\r\n    ],\r\n    correctAnswer: 1\r\n  },\r\n  {\r\n    question: \"Which sentence uses a comma correctly?\",\r\n    options: [\r\n      \"After dinner we went for a walk.\",\r\n      \"After dinner, we went for a walk.\",\r\n      \"After, dinner we went for a walk.\"\r\n    ],\r\n    correctAnswer: 1\r\n  },\r\n  {\r\n    question: \"Which sentence uses commas correctly?\",\r\n    options: [\r\n      \"It was a cold dark night.\",\r\n      \"It was a cold, dark night.\",\r\n      \"It was a cold dark, night.\"\r\n    ],\r\n    correctAnswer: 1\r\n  }\r\n];\r\n\r\nconst CommawidowLevel = () => {\r\n  const navigate = useNavigate();\r\n  const [currentDialogue, setCurrentDialogue] = useState(0);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [health, setHealth] = useState(100);\r\n  const [timeLeft, setTimeLeft] = useState(60);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [victory, setVictory] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (currentDialogue < dialogueSequence.length) {\r\n      const timer = setTimeout(() => {\r\n        setCurrentDialogue(prev => prev + 1);\r\n      }, 3000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [currentDialogue]);\r\n\r\n  useEffect(() => {\r\n    if (timeLeft > 0 && !gameOver && !victory) {\r\n      const timer = setInterval(() => {\r\n        setTimeLeft(prev => prev - 1);\r\n      }, 1000);\r\n      return () => clearInterval(timer);\r\n    } else if (timeLeft === 0) {\r\n      setGameOver(true);\r\n    }\r\n  }, [timeLeft, gameOver, victory]);\r\n\r\n  const handleAnswer = (index) => {\r\n    setSelectedAnswer(index);\r\n    setShowResult(true);\r\n\r\n    if (index === questions[currentQuestion].correctAnswer) {\r\n      if (currentQuestion === questions.length - 1) {\r\n        setVictory(true);\r\n      } else {\r\n        setTimeout(() => {\r\n          setCurrentQuestion(prev => prev + 1);\r\n          setSelectedAnswer(null);\r\n          setShowResult(false);\r\n        }, 1500);\r\n      }\r\n    } else {\r\n      setHealth(prev => Math.max(0, prev - 20));\r\n      if (health <= 20) {\r\n        setGameOver(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleContinue = () => {\r\n    if (victory) {\r\n      navigate('/jungle-lush');\r\n    } else if (gameOver) {\r\n      navigate('/jungle-lush');\r\n    }\r\n  };\r\n\r\n  if (currentDialogue < dialogueSequence.length) {\r\n    return (\r\n      <Container maxWidth=\"md\" sx={{ mt: 4 }}>\r\n        <DialogueBox>\r\n          <CharacterName variant=\"h6\">\r\n            {dialogueSequence[currentDialogue].speaker}\r\n          </CharacterName>\r\n          <Typography variant=\"body1\">\r\n            {dialogueSequence[currentDialogue].text}\r\n          </Typography>\r\n        </DialogueBox>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" sx={{ mt: 4 }}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\r\n            <HealthBar>\r\n              <HealthFill health={health} />\r\n            </HealthBar>\r\n            <Timer>{timeLeft}s</Timer>\r\n          </Box>\r\n        </Grid>\r\n        \r\n        <Grid item xs={12}>\r\n          <QuestionBox>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              {questions[currentQuestion].question}\r\n            </Typography>\r\n            <Grid container spacing={2}>\r\n              {questions[currentQuestion].options.map((option, index) => (\r\n                <Grid item xs={12} key={index}>\r\n                  <AnswerButton\r\n                    variant=\"contained\"\r\n                    onClick={() => handleAnswer(index)}\r\n                    disabled={showResult}\r\n                    selected={selectedAnswer === index}\r\n                    correct={index === questions[currentQuestion].correctAnswer}\r\n                  >\r\n                    {option}\r\n                  </AnswerButton>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </QuestionBox>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Dialog open={gameOver || victory} onClose={handleContinue}>\r\n        <DialogContent>\r\n          <Typography variant=\"h5\" align=\"center\">\r\n            {victory ? \"Victory! You've defeated Commawidow!\" : \"Game Over! Try again!\"}\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleContinue} color=\"primary\">\r\n            Continue\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CommawidowLevel; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}