{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jake\\\\Desktop\\\\VocabVenture\\\\Vocabventure\\\\frontend\\\\src\\\\pages\\\\Game\\\\JungleLushLevel4.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Box, Typography, Button, Paper, Grid, CircularProgress, Dialog, DialogActions, DialogContent } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { styled, keyframes } from '@mui/material/styles';\nimport '../../styles/MapView.css';\nimport CloseIcon from '@mui/icons-material/Close';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JUNGLE_BG = 'https://png.pngtree.com/background/20220727/original/pngtree-jungle-game-background-arcade-art-picture-image_1829537.jpg';\nconst WIZARD_IMG = 'https://www.shutterstock.com/image-vector/pixel-art-wizard-long-beard-260nw-2544146115.jpg';\nconst USER_IMG = 'https://w7.pngwing.com/pngs/928/303/png-transparent-pixel-dodgers-pixel-art-sprite-text-cartoon-fictional-character.png';\nconst COMMAWIDOW_IMG = 'https://static.vecteezy.com/system/resources/previews/027/517/582/non_2x/pixel-cartoon-swamp-monster-png.png';\nconst TENSAPHANT_IMG = 'https://static.vecteezy.com/system/resources/previews/027/517/582/non_2x/pixel-cartoon-swamp-monster-png.png';\nconst PLURIBOG_IMG = 'https://cdna.artstation.com/p/assets/images/images/072/803/668/large/blade-blackwood-frogmonster.jpg?1708254629';\nconst HEART_IMG = 'https://p7.hiclipart.com/preview/28/266/352/pixel-art-heart-8-bit-color-heart-thumbnail.jpg';\nconst bounce = keyframes`\n  0%, 100% { transform: translateY(0); }\n  50% { transform: translateY(-10px); }\n`;\nconst shake = keyframes`\n  0%, 100% { transform: translateX(0); }\n  25% { transform: translateX(-8px); }\n  75% { transform: translateX(8px); }\n`;\nconst hit = keyframes`\n  0% { transform: scale(1); }\n  25% { transform: scale(1.1); }\n  50% { transform: scale(0.9); }\n  75% { transform: scale(1.05); }\n  100% { transform: scale(1); }\n`;\nconst userFlash = keyframes`\n  0%, 100% { opacity: 1; filter: brightness(1); }\n  50% { opacity: 0.7; filter: brightness(1.2) sepia(1) saturate(10000%) hue-rotate(-50deg); }\n`;\nconst monsterFlash = keyframes`\n  0%, 100% { opacity: 1; filter: brightness(1); }\n  50% { opacity: 0.7; filter: brightness(1.2) sepia(1) saturate(10000%) hue-rotate(180deg); }\n`;\nconst SceneContainer = styled(Box)(({\n  theme\n}) => ({\n  width: '100%',\n  height: '100vh',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'flex-end',\n  backgroundImage: `url(${JUNGLE_BG})`,\n  backgroundSize: 'cover',\n  backgroundPosition: 'center',\n  position: 'relative',\n  overflow: 'hidden'\n}));\n_c = SceneContainer;\nconst Ground = styled(Box)(({\n  theme\n}) => ({\n  position: 'absolute',\n  left: 0,\n  bottom: '90px',\n  width: '100%',\n  height: '40px',\n  background: 'linear-gradient(to top, #3e2e1a 80%, rgba(62,46,26,0.2) 100%)',\n  zIndex: 2,\n  borderTopLeftRadius: '30px',\n  borderTopRightRadius: '30px',\n  boxShadow: '0 0 16px 2px rgba(0,0,0,0.25)'\n}));\n_c2 = Ground;\nconst SpritesRow = styled(Box)(({\n  theme\n}) => ({\n  width: '900px',\n  maxWidth: '90vw',\n  position: 'absolute',\n  left: '50%',\n  transform: 'translateX(-50%)',\n  bottom: '130px',\n  height: '160px',\n  zIndex: 3,\n  pointerEvents: 'none'\n}));\n_c3 = SpritesRow;\nconst WizardUserGroup = styled(Box)(({\n  theme\n}) => ({\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'flex-end',\n  gap: '24px'\n}));\n_c4 = WizardUserGroup;\nconst MonsterGroup = styled(Box)(({\n  theme\n}) => ({\n  position: 'absolute',\n  right: 0,\n  bottom: 0,\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'flex-end',\n  gap: '32px'\n}));\n_c5 = MonsterGroup;\nconst WizardSprite = styled('img')({\n  width: '120px',\n  height: 'auto',\n  filter: 'drop-shadow(0 8px 16px rgba(0,0,0,0.5))',\n  animation: `${bounce} 2.2s infinite`\n});\n_c6 = WizardSprite;\nconst UserSprite = styled('img')(({\n  isDamaged\n}) => ({\n  width: '100px',\n  height: 'auto',\n  filter: 'drop-shadow(0 8px 16px rgba(0,0,0,0.5))',\n  animation: `${bounce} 2s infinite, ${isDamaged ? `${shake} 0.5s ease-in-out, ${userFlash} 0.5s ease-in-out` : 'none'}`\n}));\n_c7 = UserSprite;\nconst MonsterSprite = styled('img')(({\n  isDamaged\n}) => ({\n  width: '140px',\n  height: 'auto',\n  filter: 'drop-shadow(0 8px 16px rgba(0,0,0,0.5))',\n  animation: `${bounce} 2.3s infinite, ${isDamaged ? `${hit} 0.5s ease-in-out, ${monsterFlash} 0.5s ease-in-out` : 'none'}`\n}));\n_c8 = MonsterSprite;\nconst FLESH_BROWN = '#e6c7b2';\nconst NAME_BG = '#d1a97a';\nconst DialogueBox = styled(Paper)(({\n  theme\n}) => ({\n  position: 'absolute',\n  left: '50%',\n  bottom: 0,\n  transform: 'translateX(-50%)',\n  width: '900px',\n  maxWidth: '90vw',\n  minWidth: '320px',\n  padding: theme.spacing(3, 4),\n  backgroundColor: FLESH_BROWN,\n  color: '#3a2a1a',\n  textAlign: 'left',\n  borderRadius: '18px 18px 0 0',\n  zIndex: 10,\n  boxShadow: '0 -2px 16px 2px rgba(0,0,0,0.18)',\n  border: '3px solid #b48a6e',\n  fontFamily: 'monospace',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'space-between',\n  boxSizing: 'border-box'\n}));\n_c9 = DialogueBox;\nconst NameTag = styled(Box)(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: '-22px',\n  left: '18px',\n  background: NAME_BG,\n  color: '#3a2a1a',\n  borderRadius: '16px',\n  padding: '4px 18px',\n  fontWeight: 700,\n  fontSize: '1.1rem',\n  boxShadow: '0 2px 8px #b48a6e44',\n  border: '2px solid #b48a6e',\n  fontFamily: 'monospace',\n  zIndex: 2\n}));\n_c10 = NameTag;\nconst ClickPrompt = styled(Box)(({\n  theme\n}) => ({\n  position: 'absolute',\n  bottom: '16px',\n  right: '32px',\n  color: '#00996b',\n  fontSize: '1.1rem',\n  fontWeight: 700,\n  opacity: 0.85,\n  pointerEvents: 'none',\n  zIndex: 5,\n  fontFamily: 'monospace'\n}));\n_c11 = ClickPrompt;\nconst HeartRow = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  gap: '8px',\n  position: 'absolute',\n  top: '24px',\n  left: '32px',\n  zIndex: 20\n}));\n_c12 = HeartRow;\nconst TimerBox = styled(Box)(({\n  theme\n}) => ({\n  background: '#fffbe6',\n  color: '#3a2a1a',\n  borderRadius: '12px',\n  padding: '6px 18px',\n  fontWeight: 700,\n  fontFamily: 'monospace',\n  fontSize: '1.2rem',\n  boxShadow: '0 2px 8px #b48a6e44',\n  border: '2px solid #b48a6e',\n  zIndex: 20,\n  marginLeft: 16\n}));\n_c13 = TimerBox;\nconst VS = styled(Box)(({\n  theme\n}) => ({\n  fontSize: '2.5rem',\n  fontWeight: 900,\n  color: '#fff',\n  textShadow: '0 2px 8px #000',\n  margin: '0 18px',\n  zIndex: 22,\n  pointerEvents: 'none'\n}));\n_c14 = VS;\nconst TopBar = styled(Box)(({\n  theme\n}) => ({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  padding: theme.spacing(2),\n  zIndex: 20\n}));\n_c15 = TopBar;\nconst QuestionBox = styled(Paper)(({\n  theme\n}) => ({\n  position: 'absolute',\n  left: '50%',\n  top: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: '600px',\n  maxWidth: '90vw',\n  padding: theme.spacing(4),\n  backgroundColor: '#fffbe6',\n  color: '#3a2a1a',\n  textAlign: 'center',\n  borderRadius: '18px',\n  zIndex: 30,\n  boxShadow: '0 4px 24px rgba(0,0,0,0.2)',\n  border: '3px solid #b48a6e',\n  fontFamily: 'monospace'\n}));\n_c16 = QuestionBox;\nconst OptionButton = styled(Button)(({\n  theme,\n  isCorrect,\n  isWrong\n}) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n  marginTop: theme.spacing(2),\n  backgroundColor: isCorrect ? '#4caf50' : isWrong ? '#f44336' : '#fffbe6',\n  color: isCorrect || isWrong ? '#fff' : '#3a2a1a',\n  border: '2px solid #b48a6e',\n  borderRadius: '12px',\n  fontFamily: 'monospace',\n  fontSize: '1.1rem',\n  textTransform: 'none',\n  '&:hover': {\n    backgroundColor: isCorrect ? '#4caf50' : isWrong ? '#f44336' : '#f5f0e0'\n  }\n}));\n_c17 = OptionButton;\nconst VictoryDialog = styled(Dialog)(({\n  theme\n}) => ({\n  '& .MuiDialog-paper': {\n    backgroundColor: '#fffbe6',\n    borderRadius: '18px',\n    border: '3px solid #b48a6e',\n    padding: theme.spacing(3),\n    fontFamily: 'monospace'\n  }\n}));\n_c18 = VictoryDialog;\nconst StarRow = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  justifyContent: 'center',\n  gap: theme.spacing(2),\n  marginTop: theme.spacing(2)\n}));\n_c19 = StarRow;\nconst Star = styled(Box)(({\n  theme,\n  filled\n}) => ({\n  fontSize: '2.5rem',\n  color: filled ? '#ffd700' : '#d3d3d3',\n  textShadow: filled ? '0 0 8px rgba(255,215,0,0.5)' : 'none'\n}));\n_c20 = Star;\nconst JungleLushLevel4 = () => {\n  _s();\n  var _dialogue$currentScen, _dialogue$currentScen2;\n  const navigate = useNavigate();\n  const [currentScene, setCurrentScene] = useState(0);\n  const [currentMonster, setCurrentMonster] = useState(0);\n  const [hearts, setHearts] = useState(3);\n  const [monsterHearts, setMonsterHearts] = useState(3);\n  const [showQuestion, setShowQuestion] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showVictory, setShowVictory] = useState(false);\n  const [stars, setStars] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDamaged, setIsDamaged] = useState(false);\n  const [isMonsterDamaged, setIsMonsterDamaged] = useState(false);\n  const dialogue = [\n  // Scene 1: Arrival at Tower\n  {\n    speaker: \"Wizard\",\n    text: \"There it isâ€¦ the Tower of Grammowl. The Scroll of Grammar pulses within, waiting for its rightful bearer.\"\n  }, {\n    speaker: \"Wizard\",\n    text: \"You've fought well, adventurer. One final step remains before you reclaim the first spark of knowledge.\"\n  }, {\n    speaker: \"Adventurer\",\n    text: \"After everything we've faced, I'm ready.\"\n  }, {\n    speaker: \"Wizard\",\n    text: \"Noâ€¦ something's wrong.\"\n  }, {\n    speaker: \"System\",\n    text: \"*TREMBLE*\"\n  },\n  // Scene 2: Underlings Return\n  {\n    speaker: \"Commawidow\",\n    text: \"Surprised? You shouldn't be. You only brushed against my rules. Grammar isn't so easily untangled.\"\n  }, {\n    speaker: \"Tensaphant\",\n    text: \"You dared disturb the timelineâ€¦ and now you think you can rewrite it? I am the master of tense!\"\n  }, {\n    speaker: \"Pluribog\",\n    text: \"You thought me defeated? I am the pit itself! Every misused pluralâ€¦ every confused childâ€¦ I feed on their ignorance!\"\n  }, {\n    speaker: \"Adventurer\",\n    text: \"You're still clinging to your broken rules? I already bested each of you.\"\n  }, {\n    speaker: \"Commawidow\",\n    text: \"You escaped our trapsâ€¦ but today, your grammar crumbles!\"\n  }, {\n    speaker: \"Tensaphant\",\n    text: \"We return not in weaknessâ€¦ but in wrath.\"\n  }, {\n    speaker: \"Pluribog\",\n    text: \"Your minds may have grownâ€¦ but we evolved in fury.\"\n  }, {\n    speaker: \"Wizard\",\n    text: \"Adventurer, steel your mind and your heart. This is no testâ€¦ this is a reckoning.\"\n  }];\n  const questions = [\n  // Commawidow Questions\n  {\n    question: \"Which of these sentences uses commas correctly?\",\n    options: [\"Before leaving she fed the dog, locked the door and grabbed her keys.\", \"Before leaving, she fed the dog, locked the door, and grabbed her keys.\", \"Before leaving she fed, the dog locked, the door, and grabbed her keys.\"],\n    correct: 1\n  }, {\n    question: \"Select the sentence with the correct greeting and comma usage:\",\n    options: [\"Dear Sarah, how are you?\", \"Dear, Sarah how are you?\", \"Dear Sarah how are you,?\"],\n    correct: 0\n  }, {\n    question: \"Choose the sentence with the correct use of commas in a compound sentence:\",\n    options: [\"I wanted to go hiking but, it started raining.\", \"I wanted to go hiking, but it started raining.\", \"I wanted to go, hiking but it started raining.\"],\n    correct: 1\n  },\n  // Tensaphant Questions\n  {\n    question: \"Choose the sentence with correct verb tense consistency:\",\n    options: [\"He studies hard and passed all his exams.\", \"He studied hard and passed all his exams.\", \"He was study hard and passes all his exams.\"],\n    correct: 1\n  }, {\n    question: \"Which sentence properly uses future perfect tense?\",\n    options: [\"By next week, I will have finished the project.\", \"By next week, I finished the project.\", \"By next week, I will finish the project.\"],\n    correct: 0\n  }, {\n    question: \"Which sentence maintains proper tense throughout?\",\n    options: [\"She will attend the meeting and presented her report.\", \"She attended the meeting and presents her report.\", \"She will attend the meeting and will present her report.\"],\n    correct: 2\n  },\n  // Pluribog Questions\n  {\n    question: \"Which is the correct sentence?\",\n    options: [\"The alumni was gathered for the reunion.\", \"The alumnis were gathered for the reunion.\", \"The alumni were gathered for the reunion.\"],\n    correct: 2\n  }, {\n    question: \"Identify the sentence with correct plural form:\",\n    options: [\"The data is inaccurate and needs reviewing.\", \"The data are inaccurate and need reviewing.\", \"The datas are inaccurate and needs review.\"],\n    correct: 1\n  }, {\n    question: \"Which sentence correctly uses both singular and plural forms?\",\n    options: [\"The criterias of this contest is strict.\", \"The criterion of this contest is strict.\", \"The criterion of this contests are strict.\"],\n    correct: 1\n  }];\n  const monsterDefeatDialogue = [\"Grammowlâ€¦ will punctuate your failureâ€¦\", \"Youâ€¦ can't outrunâ€¦ what's writtenâ€¦\", \"He waitsâ€¦ at the summitâ€¦ and you are not readyâ€¦\"];\n  const victoryDialogue = [{\n    speaker: \"Adventurer\",\n    text: \"They're goneâ€¦ for good this time.\"\n  }, {\n    speaker: \"Wizard\",\n    text: \"They were pawns of a greater madness. Ahead lies the one who twisted their purposeâ€”prepare for Grammowl.\"\n  }];\n  const handleDialogueClick = () => {\n    if (showQuestion) return;\n    if (currentScene < dialogue.length) {\n      setCurrentScene(prev => prev + 1);\n    } else if (currentMonster < 3) {\n      setShowQuestion(true);\n    } else {\n      setShowVictory(true);\n    }\n  };\n  const handleAnswer = idx => {\n    const currentQuestionIndex = currentMonster * 3 + currentQuestion;\n    const isCorrect = idx === questions[currentQuestionIndex].correct;\n    if (isCorrect) {\n      setMonsterHearts(prev => prev - 1);\n      setIsMonsterDamaged(true);\n      setTimeout(() => setIsMonsterDamaged(false), 500);\n    } else {\n      setHearts(prev => prev - 1);\n      setIsDamaged(true);\n      setTimeout(() => setIsDamaged(false), 500);\n    }\n    if (monsterHearts <= 1 || hearts <= 1) {\n      if (monsterHearts <= 1) {\n        setCurrentMonster(prev => prev + 1);\n        setMonsterHearts(3);\n        setCurrentQuestion(0);\n        setShowQuestion(false);\n        setCurrentScene(prev => prev + 1);\n      } else {\n        // Game over logic\n        navigate('/jungle-lush');\n      }\n    } else {\n      setCurrentQuestion(prev => (prev + 1) % 3);\n    }\n  };\n  const handleRetryBattle = () => {\n    setHearts(3);\n    setMonsterHearts(3);\n    setCurrentQuestion(0);\n    setShowQuestion(false);\n  };\n  const handleRetryWholeLevel = () => {\n    setCurrentScene(0);\n    setCurrentMonster(0);\n    setHearts(3);\n    setMonsterHearts(3);\n    setCurrentQuestion(0);\n    setShowQuestion(false);\n    setShowVictory(false);\n    setStars(0);\n  };\n  const handleVictory = async () => {\n    setIsLoading(true);\n    try {\n      const response = await axios.post('/api/progress/levels/4', {\n        stars: Math.max(stars, Math.ceil(hearts / 3 * 3))\n      });\n      if (response.data.success) {\n        navigate('/jungle-lush');\n      }\n    } catch (error) {\n      console.error('Error saving progress:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const getCurrentMonsterImage = () => {\n    switch (currentMonster) {\n      case 0:\n        return COMMAWIDOW_IMG;\n      case 1:\n        return TENSAPHANT_IMG;\n      case 2:\n        return PLURIBOG_IMG;\n      default:\n        return COMMAWIDOW_IMG;\n    }\n  };\n  const getCurrentMonsterName = () => {\n    switch (currentMonster) {\n      case 0:\n        return \"Commawidow\";\n      case 1:\n        return \"Tensaphant\";\n      case 2:\n        return \"Pluribog\";\n      default:\n        return \"\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(SceneContainer, {\n    onClick: handleDialogueClick,\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {\n      children: [/*#__PURE__*/_jsxDEV(HeartRow, {\n        children: [[...Array(3)].map((_, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: HEART_IMG,\n          alt: \"heart\",\n          style: {\n            width: '32px',\n            height: '32px',\n            opacity: i < hearts ? 1 : 0.3\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(TimerBox, {\n          children: getCurrentMonsterName()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HeartRow, {\n        children: [/*#__PURE__*/_jsxDEV(TimerBox, {\n          children: getCurrentMonsterName()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 11\n        }, this), [...Array(3)].map((_, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: HEART_IMG,\n          alt: \"heart\",\n          style: {\n            width: '32px',\n            height: '32px',\n            opacity: i < monsterHearts ? 1 : 0.3\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Ground, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SpritesRow, {\n      children: [/*#__PURE__*/_jsxDEV(WizardUserGroup, {\n        children: [/*#__PURE__*/_jsxDEV(WizardSprite, {\n          src: WIZARD_IMG,\n          alt: \"Wizard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UserSprite, {\n          src: USER_IMG,\n          alt: \"User\",\n          isDamaged: isDamaged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VS, {\n        children: \"VS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MonsterGroup, {\n        children: /*#__PURE__*/_jsxDEV(MonsterSprite, {\n          src: getCurrentMonsterImage(),\n          alt: getCurrentMonsterName(),\n          isDamaged: isMonsterDamaged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 7\n    }, this), !showQuestion && !showVictory && /*#__PURE__*/_jsxDEV(DialogueBox, {\n      children: [/*#__PURE__*/_jsxDEV(NameTag, {\n        children: ((_dialogue$currentScen = dialogue[currentScene]) === null || _dialogue$currentScen === void 0 ? void 0 : _dialogue$currentScen.speaker) || \"System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          mb: 2\n        },\n        children: ((_dialogue$currentScen2 = dialogue[currentScene]) === null || _dialogue$currentScen2 === void 0 ? void 0 : _dialogue$currentScen2.text) || \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ClickPrompt, {\n        children: \"Click to continue...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 9\n    }, this), showQuestion && !showVictory && /*#__PURE__*/_jsxDEV(QuestionBox, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          mb: 3\n        },\n        children: questions[currentMonster * 3 + currentQuestion].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 11\n      }, this), questions[currentMonster * 3 + currentQuestion].options.map((option, idx) => /*#__PURE__*/_jsxDEV(OptionButton, {\n        onClick: () => handleAnswer(idx),\n        isCorrect: idx === questions[currentMonster * 3 + currentQuestion].correct,\n        children: option\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(VictoryDialog, {\n      open: showVictory,\n      onClose: () => setShowVictory(false),\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          align: \"center\",\n          gutterBottom: true,\n          children: \"Victory!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          align: \"center\",\n          paragraph: true,\n          children: victoryDialogue[0].text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          align: \"center\",\n          paragraph: true,\n          children: victoryDialogue[1].text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StarRow, {\n          children: [...Array(3)].map((_, i) => /*#__PURE__*/_jsxDEV(Star, {\n            filled: i < Math.ceil(hearts / 3 * 3),\n            children: \"\\u2605\"\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          justifyContent: 'center',\n          pb: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleVictory,\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: isLoading,\n          children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 26\n          }, this) : \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 511,\n    columnNumber: 5\n  }, this);\n};\n_s(JungleLushLevel4, \"3YSkBiQjac7ZiKpDP7l/aCBYSkE=\", false, function () {\n  return [useNavigate];\n});\n_c21 = JungleLushLevel4;\nexport default JungleLushLevel4;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21;\n$RefreshReg$(_c, \"SceneContainer\");\n$RefreshReg$(_c2, \"Ground\");\n$RefreshReg$(_c3, \"SpritesRow\");\n$RefreshReg$(_c4, \"WizardUserGroup\");\n$RefreshReg$(_c5, \"MonsterGroup\");\n$RefreshReg$(_c6, \"WizardSprite\");\n$RefreshReg$(_c7, \"UserSprite\");\n$RefreshReg$(_c8, \"MonsterSprite\");\n$RefreshReg$(_c9, \"DialogueBox\");\n$RefreshReg$(_c10, \"NameTag\");\n$RefreshReg$(_c11, \"ClickPrompt\");\n$RefreshReg$(_c12, \"HeartRow\");\n$RefreshReg$(_c13, \"TimerBox\");\n$RefreshReg$(_c14, \"VS\");\n$RefreshReg$(_c15, \"TopBar\");\n$RefreshReg$(_c16, \"QuestionBox\");\n$RefreshReg$(_c17, \"OptionButton\");\n$RefreshReg$(_c18, \"VictoryDialog\");\n$RefreshReg$(_c19, \"StarRow\");\n$RefreshReg$(_c20, \"Star\");\n$RefreshReg$(_c21, \"JungleLushLevel4\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Box","Typography","Button","Paper","Grid","CircularProgress","Dialog","DialogActions","DialogContent","useNavigate","styled","keyframes","CloseIcon","axios","jsxDEV","_jsxDEV","JUNGLE_BG","WIZARD_IMG","USER_IMG","COMMAWIDOW_IMG","TENSAPHANT_IMG","PLURIBOG_IMG","HEART_IMG","bounce","shake","hit","userFlash","monsterFlash","SceneContainer","theme","width","height","display","flexDirection","alignItems","justifyContent","backgroundImage","backgroundSize","backgroundPosition","position","overflow","_c","Ground","left","bottom","background","zIndex","borderTopLeftRadius","borderTopRightRadius","boxShadow","_c2","SpritesRow","maxWidth","transform","pointerEvents","_c3","WizardUserGroup","gap","_c4","MonsterGroup","right","_c5","WizardSprite","filter","animation","_c6","UserSprite","isDamaged","_c7","MonsterSprite","_c8","FLESH_BROWN","NAME_BG","DialogueBox","minWidth","padding","spacing","backgroundColor","color","textAlign","borderRadius","border","fontFamily","boxSizing","_c9","NameTag","top","fontWeight","fontSize","_c10","ClickPrompt","opacity","_c11","HeartRow","_c12","TimerBox","marginLeft","_c13","VS","textShadow","margin","_c14","TopBar","_c15","QuestionBox","_c16","OptionButton","isCorrect","isWrong","marginTop","textTransform","_c17","VictoryDialog","_c18","StarRow","_c19","Star","filled","_c20","JungleLushLevel4","_s","_dialogue$currentScen","_dialogue$currentScen2","navigate","currentScene","setCurrentScene","currentMonster","setCurrentMonster","hearts","setHearts","monsterHearts","setMonsterHearts","showQuestion","setShowQuestion","currentQuestion","setCurrentQuestion","showVictory","setShowVictory","stars","setStars","isLoading","setIsLoading","setIsDamaged","isMonsterDamaged","setIsMonsterDamaged","dialogue","speaker","text","questions","question","options","correct","monsterDefeatDialogue","victoryDialogue","handleDialogueClick","length","prev","handleAnswer","idx","currentQuestionIndex","setTimeout","handleRetryBattle","handleRetryWholeLevel","handleVictory","response","post","Math","max","ceil","data","success","error","console","getCurrentMonsterImage","getCurrentMonsterName","onClick","children","Array","map","_","i","src","alt","style","fileName","_jsxFileName","lineNumber","columnNumber","variant","sx","mb","option","open","onClose","fullWidth","align","gutterBottom","paragraph","pb","disabled","size","_c21","$RefreshReg$"],"sources":["C:/Users/Jake/Desktop/VocabVenture/Vocabventure/frontend/src/pages/Game/JungleLushLevel4.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { Box, Typography, Button, Paper, Grid, CircularProgress, Dialog, DialogActions, DialogContent } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { styled, keyframes } from '@mui/material/styles';\r\nimport '../../styles/MapView.css';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport axios from 'axios';\r\n\r\nconst JUNGLE_BG = 'https://png.pngtree.com/background/20220727/original/pngtree-jungle-game-background-arcade-art-picture-image_1829537.jpg';\r\nconst WIZARD_IMG = 'https://www.shutterstock.com/image-vector/pixel-art-wizard-long-beard-260nw-2544146115.jpg';\r\nconst USER_IMG = 'https://w7.pngwing.com/pngs/928/303/png-transparent-pixel-dodgers-pixel-art-sprite-text-cartoon-fictional-character.png';\r\nconst COMMAWIDOW_IMG = 'https://static.vecteezy.com/system/resources/previews/027/517/582/non_2x/pixel-cartoon-swamp-monster-png.png';\r\nconst TENSAPHANT_IMG = 'https://static.vecteezy.com/system/resources/previews/027/517/582/non_2x/pixel-cartoon-swamp-monster-png.png';\r\nconst PLURIBOG_IMG = 'https://cdna.artstation.com/p/assets/images/images/072/803/668/large/blade-blackwood-frogmonster.jpg?1708254629';\r\nconst HEART_IMG = 'https://p7.hiclipart.com/preview/28/266/352/pixel-art-heart-8-bit-color-heart-thumbnail.jpg';\r\n\r\nconst bounce = keyframes`\r\n  0%, 100% { transform: translateY(0); }\r\n  50% { transform: translateY(-10px); }\r\n`;\r\n\r\nconst shake = keyframes`\r\n  0%, 100% { transform: translateX(0); }\r\n  25% { transform: translateX(-8px); }\r\n  75% { transform: translateX(8px); }\r\n`;\r\n\r\nconst hit = keyframes`\r\n  0% { transform: scale(1); }\r\n  25% { transform: scale(1.1); }\r\n  50% { transform: scale(0.9); }\r\n  75% { transform: scale(1.05); }\r\n  100% { transform: scale(1); }\r\n`;\r\n\r\nconst userFlash = keyframes`\r\n  0%, 100% { opacity: 1; filter: brightness(1); }\r\n  50% { opacity: 0.7; filter: brightness(1.2) sepia(1) saturate(10000%) hue-rotate(-50deg); }\r\n`;\r\n\r\nconst monsterFlash = keyframes`\r\n  0%, 100% { opacity: 1; filter: brightness(1); }\r\n  50% { opacity: 0.7; filter: brightness(1.2) sepia(1) saturate(10000%) hue-rotate(180deg); }\r\n`;\r\n\r\nconst SceneContainer = styled(Box)(({ theme }) => ({\r\n  width: '100%',\r\n  height: '100vh',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  justifyContent: 'flex-end',\r\n  backgroundImage: `url(${JUNGLE_BG})`,\r\n  backgroundSize: 'cover',\r\n  backgroundPosition: 'center',\r\n  position: 'relative',\r\n  overflow: 'hidden',\r\n}));\r\n\r\nconst Ground = styled(Box)(({ theme }) => ({\r\n  position: 'absolute',\r\n  left: 0,\r\n  bottom: '90px',\r\n  width: '100%',\r\n  height: '40px',\r\n  background: 'linear-gradient(to top, #3e2e1a 80%, rgba(62,46,26,0.2) 100%)',\r\n  zIndex: 2,\r\n  borderTopLeftRadius: '30px',\r\n  borderTopRightRadius: '30px',\r\n  boxShadow: '0 0 16px 2px rgba(0,0,0,0.25)',\r\n}));\r\n\r\nconst SpritesRow = styled(Box)(({ theme }) => ({\r\n  width: '900px',\r\n  maxWidth: '90vw',\r\n  position: 'absolute',\r\n  left: '50%',\r\n  transform: 'translateX(-50%)',\r\n  bottom: '130px',\r\n  height: '160px',\r\n  zIndex: 3,\r\n  pointerEvents: 'none',\r\n}));\r\n\r\nconst WizardUserGroup = styled(Box)(({ theme }) => ({\r\n  position: 'absolute',\r\n  left: 0,\r\n  bottom: 0,\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  alignItems: 'flex-end',\r\n  gap: '24px',\r\n}));\r\n\r\nconst MonsterGroup = styled(Box)(({ theme }) => ({\r\n  position: 'absolute',\r\n  right: 0,\r\n  bottom: 0,\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  alignItems: 'flex-end',\r\n  gap: '32px',\r\n}));\r\n\r\nconst WizardSprite = styled('img')({\r\n  width: '120px',\r\n  height: 'auto',\r\n  filter: 'drop-shadow(0 8px 16px rgba(0,0,0,0.5))',\r\n  animation: `${bounce} 2.2s infinite`,\r\n});\r\n\r\nconst UserSprite = styled('img')(({ isDamaged }) => ({\r\n  width: '100px',\r\n  height: 'auto',\r\n  filter: 'drop-shadow(0 8px 16px rgba(0,0,0,0.5))',\r\n  animation: `${bounce} 2s infinite, ${isDamaged ? `${shake} 0.5s ease-in-out, ${userFlash} 0.5s ease-in-out` : 'none'}`,\r\n}));\r\n\r\nconst MonsterSprite = styled('img')(({ isDamaged }) => ({\r\n  width: '140px',\r\n  height: 'auto',\r\n  filter: 'drop-shadow(0 8px 16px rgba(0,0,0,0.5))',\r\n  animation: `${bounce} 2.3s infinite, ${isDamaged ? `${hit} 0.5s ease-in-out, ${monsterFlash} 0.5s ease-in-out` : 'none'}`,\r\n}));\r\n\r\nconst FLESH_BROWN = '#e6c7b2';\r\nconst NAME_BG = '#d1a97a';\r\n\r\nconst DialogueBox = styled(Paper)(({ theme }) => ({\r\n  position: 'absolute',\r\n  left: '50%',\r\n  bottom: 0,\r\n  transform: 'translateX(-50%)',\r\n  width: '900px',\r\n  maxWidth: '90vw',\r\n  minWidth: '320px',\r\n  padding: theme.spacing(3, 4),\r\n  backgroundColor: FLESH_BROWN,\r\n  color: '#3a2a1a',\r\n  textAlign: 'left',\r\n  borderRadius: '18px 18px 0 0',\r\n  zIndex: 10,\r\n  boxShadow: '0 -2px 16px 2px rgba(0,0,0,0.18)',\r\n  border: '3px solid #b48a6e',\r\n  fontFamily: 'monospace',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'space-between',\r\n  boxSizing: 'border-box',\r\n}));\r\n\r\nconst NameTag = styled(Box)(({ theme }) => ({\r\n  position: 'absolute',\r\n  top: '-22px',\r\n  left: '18px',\r\n  background: NAME_BG,\r\n  color: '#3a2a1a',\r\n  borderRadius: '16px',\r\n  padding: '4px 18px',\r\n  fontWeight: 700,\r\n  fontSize: '1.1rem',\r\n  boxShadow: '0 2px 8px #b48a6e44',\r\n  border: '2px solid #b48a6e',\r\n  fontFamily: 'monospace',\r\n  zIndex: 2,\r\n}));\r\n\r\nconst ClickPrompt = styled(Box)(({ theme }) => ({\r\n  position: 'absolute',\r\n  bottom: '16px',\r\n  right: '32px',\r\n  color: '#00996b',\r\n  fontSize: '1.1rem',\r\n  fontWeight: 700,\r\n  opacity: 0.85,\r\n  pointerEvents: 'none',\r\n  zIndex: 5,\r\n  fontFamily: 'monospace',\r\n}));\r\n\r\nconst HeartRow = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  alignItems: 'center',\r\n  gap: '8px',\r\n  position: 'absolute',\r\n  top: '24px',\r\n  left: '32px',\r\n  zIndex: 20,\r\n}));\r\n\r\nconst TimerBox = styled(Box)(({ theme }) => ({\r\n  background: '#fffbe6',\r\n  color: '#3a2a1a',\r\n  borderRadius: '12px',\r\n  padding: '6px 18px',\r\n  fontWeight: 700,\r\n  fontFamily: 'monospace',\r\n  fontSize: '1.2rem',\r\n  boxShadow: '0 2px 8px #b48a6e44',\r\n  border: '2px solid #b48a6e',\r\n  zIndex: 20,\r\n  marginLeft: 16,\r\n}));\r\n\r\nconst VS = styled(Box)(({ theme }) => ({\r\n  fontSize: '2.5rem',\r\n  fontWeight: 900,\r\n  color: '#fff',\r\n  textShadow: '0 2px 8px #000',\r\n  margin: '0 18px',\r\n  zIndex: 22,\r\n  pointerEvents: 'none',\r\n}));\r\n\r\nconst TopBar = styled(Box)(({ theme }) => ({\r\n  width: '100%',\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  position: 'absolute',\r\n  top: 0,\r\n  left: 0,\r\n  padding: theme.spacing(2),\r\n  zIndex: 20,\r\n}));\r\n\r\nconst QuestionBox = styled(Paper)(({ theme }) => ({\r\n  position: 'absolute',\r\n  left: '50%',\r\n  top: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: '600px',\r\n  maxWidth: '90vw',\r\n  padding: theme.spacing(4),\r\n  backgroundColor: '#fffbe6',\r\n  color: '#3a2a1a',\r\n  textAlign: 'center',\r\n  borderRadius: '18px',\r\n  zIndex: 30,\r\n  boxShadow: '0 4px 24px rgba(0,0,0,0.2)',\r\n  border: '3px solid #b48a6e',\r\n  fontFamily: 'monospace',\r\n}));\r\n\r\nconst OptionButton = styled(Button)(({ theme, isCorrect, isWrong }) => ({\r\n  width: '100%',\r\n  padding: theme.spacing(2),\r\n  marginTop: theme.spacing(2),\r\n  backgroundColor: isCorrect ? '#4caf50' : isWrong ? '#f44336' : '#fffbe6',\r\n  color: isCorrect || isWrong ? '#fff' : '#3a2a1a',\r\n  border: '2px solid #b48a6e',\r\n  borderRadius: '12px',\r\n  fontFamily: 'monospace',\r\n  fontSize: '1.1rem',\r\n  textTransform: 'none',\r\n  '&:hover': {\r\n    backgroundColor: isCorrect ? '#4caf50' : isWrong ? '#f44336' : '#f5f0e0',\r\n  },\r\n}));\r\n\r\nconst VictoryDialog = styled(Dialog)(({ theme }) => ({\r\n  '& .MuiDialog-paper': {\r\n    backgroundColor: '#fffbe6',\r\n    borderRadius: '18px',\r\n    border: '3px solid #b48a6e',\r\n    padding: theme.spacing(3),\r\n    fontFamily: 'monospace',\r\n  },\r\n}));\r\n\r\nconst StarRow = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  gap: theme.spacing(2),\r\n  marginTop: theme.spacing(2),\r\n}));\r\n\r\nconst Star = styled(Box)(({ theme, filled }) => ({\r\n  fontSize: '2.5rem',\r\n  color: filled ? '#ffd700' : '#d3d3d3',\r\n  textShadow: filled ? '0 0 8px rgba(255,215,0,0.5)' : 'none',\r\n}));\r\n\r\nconst JungleLushLevel4 = () => {\r\n  const navigate = useNavigate();\r\n  const [currentScene, setCurrentScene] = useState(0);\r\n  const [currentMonster, setCurrentMonster] = useState(0);\r\n  const [hearts, setHearts] = useState(3);\r\n  const [monsterHearts, setMonsterHearts] = useState(3);\r\n  const [showQuestion, setShowQuestion] = useState(false);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [showVictory, setShowVictory] = useState(false);\r\n  const [stars, setStars] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isDamaged, setIsDamaged] = useState(false);\r\n  const [isMonsterDamaged, setIsMonsterDamaged] = useState(false);\r\n\r\n  const dialogue = [\r\n    // Scene 1: Arrival at Tower\r\n    { speaker: \"Wizard\", text: \"There it isâ€¦ the Tower of Grammowl. The Scroll of Grammar pulses within, waiting for its rightful bearer.\" },\r\n    { speaker: \"Wizard\", text: \"You've fought well, adventurer. One final step remains before you reclaim the first spark of knowledge.\" },\r\n    { speaker: \"Adventurer\", text: \"After everything we've faced, I'm ready.\" },\r\n    { speaker: \"Wizard\", text: \"Noâ€¦ something's wrong.\" },\r\n    { speaker: \"System\", text: \"*TREMBLE*\" },\r\n    \r\n    // Scene 2: Underlings Return\r\n    { speaker: \"Commawidow\", text: \"Surprised? You shouldn't be. You only brushed against my rules. Grammar isn't so easily untangled.\" },\r\n    { speaker: \"Tensaphant\", text: \"You dared disturb the timelineâ€¦ and now you think you can rewrite it? I am the master of tense!\" },\r\n    { speaker: \"Pluribog\", text: \"You thought me defeated? I am the pit itself! Every misused pluralâ€¦ every confused childâ€¦ I feed on their ignorance!\" },\r\n    { speaker: \"Adventurer\", text: \"You're still clinging to your broken rules? I already bested each of you.\" },\r\n    { speaker: \"Commawidow\", text: \"You escaped our trapsâ€¦ but today, your grammar crumbles!\" },\r\n    { speaker: \"Tensaphant\", text: \"We return not in weaknessâ€¦ but in wrath.\" },\r\n    { speaker: \"Pluribog\", text: \"Your minds may have grownâ€¦ but we evolved in fury.\" },\r\n    { speaker: \"Wizard\", text: \"Adventurer, steel your mind and your heart. This is no testâ€¦ this is a reckoning.\" },\r\n  ];\r\n\r\n  const questions = [\r\n    // Commawidow Questions\r\n    {\r\n      question: \"Which of these sentences uses commas correctly?\",\r\n      options: [\r\n        \"Before leaving she fed the dog, locked the door and grabbed her keys.\",\r\n        \"Before leaving, she fed the dog, locked the door, and grabbed her keys.\",\r\n        \"Before leaving she fed, the dog locked, the door, and grabbed her keys.\"\r\n      ],\r\n      correct: 1\r\n    },\r\n    {\r\n      question: \"Select the sentence with the correct greeting and comma usage:\",\r\n      options: [\r\n        \"Dear Sarah, how are you?\",\r\n        \"Dear, Sarah how are you?\",\r\n        \"Dear Sarah how are you,?\"\r\n      ],\r\n      correct: 0\r\n    },\r\n    {\r\n      question: \"Choose the sentence with the correct use of commas in a compound sentence:\",\r\n      options: [\r\n        \"I wanted to go hiking but, it started raining.\",\r\n        \"I wanted to go hiking, but it started raining.\",\r\n        \"I wanted to go, hiking but it started raining.\"\r\n      ],\r\n      correct: 1\r\n    },\r\n    // Tensaphant Questions\r\n    {\r\n      question: \"Choose the sentence with correct verb tense consistency:\",\r\n      options: [\r\n        \"He studies hard and passed all his exams.\",\r\n        \"He studied hard and passed all his exams.\",\r\n        \"He was study hard and passes all his exams.\"\r\n      ],\r\n      correct: 1\r\n    },\r\n    {\r\n      question: \"Which sentence properly uses future perfect tense?\",\r\n      options: [\r\n        \"By next week, I will have finished the project.\",\r\n        \"By next week, I finished the project.\",\r\n        \"By next week, I will finish the project.\"\r\n      ],\r\n      correct: 0\r\n    },\r\n    {\r\n      question: \"Which sentence maintains proper tense throughout?\",\r\n      options: [\r\n        \"She will attend the meeting and presented her report.\",\r\n        \"She attended the meeting and presents her report.\",\r\n        \"She will attend the meeting and will present her report.\"\r\n      ],\r\n      correct: 2\r\n    },\r\n    // Pluribog Questions\r\n    {\r\n      question: \"Which is the correct sentence?\",\r\n      options: [\r\n        \"The alumni was gathered for the reunion.\",\r\n        \"The alumnis were gathered for the reunion.\",\r\n        \"The alumni were gathered for the reunion.\"\r\n      ],\r\n      correct: 2\r\n    },\r\n    {\r\n      question: \"Identify the sentence with correct plural form:\",\r\n      options: [\r\n        \"The data is inaccurate and needs reviewing.\",\r\n        \"The data are inaccurate and need reviewing.\",\r\n        \"The datas are inaccurate and needs review.\"\r\n      ],\r\n      correct: 1\r\n    },\r\n    {\r\n      question: \"Which sentence correctly uses both singular and plural forms?\",\r\n      options: [\r\n        \"The criterias of this contest is strict.\",\r\n        \"The criterion of this contest is strict.\",\r\n        \"The criterion of this contests are strict.\"\r\n      ],\r\n      correct: 1\r\n    }\r\n  ];\r\n\r\n  const monsterDefeatDialogue = [\r\n    \"Grammowlâ€¦ will punctuate your failureâ€¦\",\r\n    \"Youâ€¦ can't outrunâ€¦ what's writtenâ€¦\",\r\n    \"He waitsâ€¦ at the summitâ€¦ and you are not readyâ€¦\"\r\n  ];\r\n\r\n  const victoryDialogue = [\r\n    { speaker: \"Adventurer\", text: \"They're goneâ€¦ for good this time.\" },\r\n    { speaker: \"Wizard\", text: \"They were pawns of a greater madness. Ahead lies the one who twisted their purposeâ€”prepare for Grammowl.\" }\r\n  ];\r\n\r\n  const handleDialogueClick = () => {\r\n    if (showQuestion) return;\r\n    \r\n    if (currentScene < dialogue.length) {\r\n      setCurrentScene(prev => prev + 1);\r\n    } else if (currentMonster < 3) {\r\n      setShowQuestion(true);\r\n    } else {\r\n      setShowVictory(true);\r\n    }\r\n  };\r\n\r\n  const handleAnswer = (idx) => {\r\n    const currentQuestionIndex = currentMonster * 3 + currentQuestion;\r\n    const isCorrect = idx === questions[currentQuestionIndex].correct;\r\n\r\n    if (isCorrect) {\r\n      setMonsterHearts(prev => prev - 1);\r\n      setIsMonsterDamaged(true);\r\n      setTimeout(() => setIsMonsterDamaged(false), 500);\r\n    } else {\r\n      setHearts(prev => prev - 1);\r\n      setIsDamaged(true);\r\n      setTimeout(() => setIsDamaged(false), 500);\r\n    }\r\n\r\n    if (monsterHearts <= 1 || hearts <= 1) {\r\n      if (monsterHearts <= 1) {\r\n        setCurrentMonster(prev => prev + 1);\r\n        setMonsterHearts(3);\r\n        setCurrentQuestion(0);\r\n        setShowQuestion(false);\r\n        setCurrentScene(prev => prev + 1);\r\n      } else {\r\n        // Game over logic\r\n        navigate('/jungle-lush');\r\n      }\r\n    } else {\r\n      setCurrentQuestion(prev => (prev + 1) % 3);\r\n    }\r\n  };\r\n\r\n  const handleRetryBattle = () => {\r\n    setHearts(3);\r\n    setMonsterHearts(3);\r\n    setCurrentQuestion(0);\r\n    setShowQuestion(false);\r\n  };\r\n\r\n  const handleRetryWholeLevel = () => {\r\n    setCurrentScene(0);\r\n    setCurrentMonster(0);\r\n    setHearts(3);\r\n    setMonsterHearts(3);\r\n    setCurrentQuestion(0);\r\n    setShowQuestion(false);\r\n    setShowVictory(false);\r\n    setStars(0);\r\n  };\r\n\r\n  const handleVictory = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await axios.post('/api/progress/levels/4', {\r\n        stars: Math.max(stars, Math.ceil((hearts / 3) * 3))\r\n      });\r\n      if (response.data.success) {\r\n        navigate('/jungle-lush');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving progress:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const getCurrentMonsterImage = () => {\r\n    switch (currentMonster) {\r\n      case 0: return COMMAWIDOW_IMG;\r\n      case 1: return TENSAPHANT_IMG;\r\n      case 2: return PLURIBOG_IMG;\r\n      default: return COMMAWIDOW_IMG;\r\n    }\r\n  };\r\n\r\n  const getCurrentMonsterName = () => {\r\n    switch (currentMonster) {\r\n      case 0: return \"Commawidow\";\r\n      case 1: return \"Tensaphant\";\r\n      case 2: return \"Pluribog\";\r\n      default: return \"\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SceneContainer onClick={handleDialogueClick}>\r\n      <TopBar>\r\n        <HeartRow>\r\n          {[...Array(3)].map((_, i) => (\r\n            <img\r\n              key={i}\r\n              src={HEART_IMG}\r\n              alt=\"heart\"\r\n              style={{\r\n                width: '32px',\r\n                height: '32px',\r\n                opacity: i < hearts ? 1 : 0.3\r\n              }}\r\n            />\r\n          ))}\r\n          <TimerBox>\r\n            {getCurrentMonsterName()}\r\n          </TimerBox>\r\n        </HeartRow>\r\n        <HeartRow>\r\n          <TimerBox>\r\n            {getCurrentMonsterName()}\r\n          </TimerBox>\r\n          {[...Array(3)].map((_, i) => (\r\n            <img\r\n              key={i}\r\n              src={HEART_IMG}\r\n              alt=\"heart\"\r\n              style={{\r\n                width: '32px',\r\n                height: '32px',\r\n                opacity: i < monsterHearts ? 1 : 0.3\r\n              }}\r\n            />\r\n          ))}\r\n        </HeartRow>\r\n      </TopBar>\r\n\r\n      <Ground />\r\n      \r\n      <SpritesRow>\r\n        <WizardUserGroup>\r\n          <WizardSprite src={WIZARD_IMG} alt=\"Wizard\" />\r\n          <UserSprite src={USER_IMG} alt=\"User\" isDamaged={isDamaged} />\r\n        </WizardUserGroup>\r\n        <VS>VS</VS>\r\n        <MonsterGroup>\r\n          <MonsterSprite\r\n            src={getCurrentMonsterImage()}\r\n            alt={getCurrentMonsterName()}\r\n            isDamaged={isMonsterDamaged}\r\n          />\r\n        </MonsterGroup>\r\n      </SpritesRow>\r\n\r\n      {!showQuestion && !showVictory && (\r\n        <DialogueBox>\r\n          <NameTag>\r\n            {dialogue[currentScene]?.speaker || \"System\"}\r\n          </NameTag>\r\n          <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n            {dialogue[currentScene]?.text || \"\"}\r\n          </Typography>\r\n          <ClickPrompt>Click to continue...</ClickPrompt>\r\n        </DialogueBox>\r\n      )}\r\n\r\n      {showQuestion && !showVictory && (\r\n        <QuestionBox>\r\n          <Typography variant=\"h6\" sx={{ mb: 3 }}>\r\n            {questions[currentMonster * 3 + currentQuestion].question}\r\n          </Typography>\r\n          {questions[currentMonster * 3 + currentQuestion].options.map((option, idx) => (\r\n            <OptionButton\r\n              key={idx}\r\n              onClick={() => handleAnswer(idx)}\r\n              isCorrect={idx === questions[currentMonster * 3 + currentQuestion].correct}\r\n            >\r\n              {option}\r\n            </OptionButton>\r\n          ))}\r\n        </QuestionBox>\r\n      )}\r\n\r\n      <VictoryDialog\r\n        open={showVictory}\r\n        onClose={() => setShowVictory(false)}\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n      >\r\n        <DialogContent>\r\n          <Typography variant=\"h5\" align=\"center\" gutterBottom>\r\n            Victory!\r\n          </Typography>\r\n          <Typography variant=\"body1\" align=\"center\" paragraph>\r\n            {victoryDialogue[0].text}\r\n          </Typography>\r\n          <Typography variant=\"body1\" align=\"center\" paragraph>\r\n            {victoryDialogue[1].text}\r\n          </Typography>\r\n          <StarRow>\r\n            {[...Array(3)].map((_, i) => (\r\n              <Star key={i} filled={i < Math.ceil((hearts / 3) * 3)}>\r\n                â˜…\r\n              </Star>\r\n            ))}\r\n          </StarRow>\r\n        </DialogContent>\r\n        <DialogActions sx={{ justifyContent: 'center', pb: 3 }}>\r\n          <Button\r\n            onClick={handleVictory}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={isLoading}\r\n          >\r\n            {isLoading ? <CircularProgress size={24} /> : \"Continue\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </VictoryDialog>\r\n    </SceneContainer>\r\n  );\r\n};\r\n\r\nexport default JungleLushLevel4; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}